{"version":3,"file":"static/js/595.efe023ad.chunk.js","mappings":"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","sources":["views/pages/login/index.tsx","views/pages/checkCode/index.tsx","views/layouts/main.layout.tsx","views/pages/forgetPassword/index.tsx","views/pages/notFound/index.tsx","views/pages/serverError/index.tsx","views/pages/connectionError/index.tsx","views/pages/inDeveloping/index.tsx","common/controllers/banner.controller.ts","common/controllers/brand.controller.ts","common/controllers/category.controller.ts","common/controllers/deliveryType.controller.ts","common/controllers/characteristic.controller.ts","common/controllers/product.controller.ts","common/controllers/paymentType.controller.ts","common/controllers/orders.controller.ts","common/controllers/users.controller.ts","views/pages/banners/index.tsx","views/pages/brands/index.tsx","views/pages/categories/categories.tsx","views/pages/categories/subSubCategories.tsx","views/pages/categories/subCategories.tsx","views/pages/categories/index.tsx","views/skeletons/characteristics.skeleton.tsx","views/skeletons/deliverytypes.skeleton.tsx","views/skeletons/products.skeletons.tsx","views/pages/deliveryType/index.tsx","views/pages/users/index.tsx","views/pages/users/id.tsx","views/pages/characteristics/Characteristic.tsx","views/pages/characteristics/index.tsx","views/components/ProductsFilter.tsx","views/pages/products/index.tsx","views/pages/paymentTypes/index.tsx","views/pages/orders/index.tsx","views/pages/order/index.tsx","common/validations/addProduct.validation.ts","views/pages/addProduct/index.tsx","views/pages/addCharacteristics/index.tsx","views/pages/addCharacteristicValue/index.tsx","views/pages/addBrand/index.tsx","views/pages/addDeliveryType/index.tsx","views/pages/addCategory/index.tsx","views/pages/addBanner/index.tsx","views/pages/addPaymentType/index.tsx","views/pages/editCharacteristic/index.tsx","views/pages/editDeliveryType/index.tsx","views/pages/editCategory/index.tsx","views/pages/editCharacteristicValue/index.tsx","views/pages/editProduct/index.tsx","views/pages/editPaymentType/index.tsx","views/pages/info/index.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { Page } from \"@components\";\r\nimport { ILoginErrors } from \"@interfaces\";\r\nimport { useAppDispatch } from \"@store\";\r\nimport { authorizeUser, authorizeUserOld } from \"@store/slice\";\r\n\r\nconst initialErrors: ILoginErrors = {\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n\r\nexport const Login = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const [email, setEmail] = React.useState<string>(\"\");\r\n  const [password, setPassword] = React.useState<string>(\"\");\r\n  const [errors, setErrors] = React.useState<ILoginErrors>(initialErrors);\r\n\r\n  const checkValidations = (): boolean => {\r\n    if (email.trim().length === 0) {\r\n      setErrors({ ...initialErrors, email: \"Вы не ввели почту\" });\r\n      return false;\r\n    } else if (password.trim().length === 0) {\r\n      setErrors({ ...initialErrors, password: \"Вы не ввели пароль\" });\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const validResult: boolean = checkValidations();\r\n    if (!validResult) return;\r\n    dispatch(authorizeUserOld(email, password));\r\n  };\r\n\r\n  return (\r\n    <Page title=\"Вход\">\r\n      <div className=\"login\">\r\n        <div className=\"login__form form\">\r\n          <div className=\"login__title form__title title\">Входите</div>\r\n          <label className=\"form__label label\">\r\n            <p className=\"form__label-name\">Email</p>\r\n            <div className=\"login__input form__label-input\">\r\n              <input\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                type=\"email\"\r\n                placeholder=\"name@company.example\"\r\n              />\r\n            </div>\r\n            {errors.email !== \"\" && (\r\n              <div className=\"form__error\">{errors.email}</div>\r\n            )}\r\n          </label>\r\n          <label className=\"form__label label\">\r\n            <p className=\"form__label-name\">Пароль</p>\r\n            <div className=\"login__input form__label-input\">\r\n              <input\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                type=\"password\"\r\n                placeholder=\"************\"\r\n              />\r\n            </div>\r\n            {errors.password !== \"\" && (\r\n              <div className=\"form__error\">{errors.password}</div>\r\n            )}\r\n            {/* <div className='login__forget-password'>\r\n              Забыли пароль?\r\n            </div> */}\r\n          </label>\r\n          <button className=\"login__submit\" onClick={handleSubmit}>\r\n            Войти\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </Page>\r\n  );\r\n};\r\n","import React from \"react\";\nimport { Page } from \"@components\";\nimport { useAppDispatch } from \"@store\";\nimport { checkAuthCode } from \"@store/slice\";\n\nconst initialErrors = {\n  code: \"\"\n};\n\nexport const CheckCode = () => {\n  const dispatch = useAppDispatch();\n\n  const [code, setCode] = React.useState<string>(\"\");\n  const [errors, setErrors] = React.useState<{code: string}>(initialErrors);\n\n  const checkValidations = (): boolean => {\n    if (code.trim().length === 0) {\n      setErrors({ ...initialErrors, code: \"Вы не ввели код\" });\n      return false;\n    } \n    return true;\n  };\n\n  const handleSubmit = () => {\n    const validResult: boolean = checkValidations();\n    if (!validResult) return;\n    dispatch(checkAuthCode(code));\n  };\n\n  return (\n    <Page title=\"Вход\">\n      <div className=\"login\">\n        <div className=\"login__form form\">\n          <div className=\"login__title form__title title\">Введите код</div>\n          <div className=\"login__title\">Код отправлени вам на почту</div>\n          <label className=\"form__label label\">\n            <p className=\"form__label-name\">Code</p>\n            <div className=\"login__input form__label-input\">\n              <input\n                value={code}\n                onChange={(e) => setCode(e.target.value)}\n                type=\"code\"\n                placeholder=\"name@company.example\"\n              />\n            </div>\n            {errors.code !== \"\" && (\n              <div className=\"form__error\">{errors.code}</div>\n            )}\n          </label>\n          <button className=\"login__submit\" onClick={handleSubmit}>\n            Войти\n          </button>\n        </div>\n      </div>\n    </Page>\n  );\n};\n","import React from \"react\";\r\nimport { Header, Navigation } from \"@components\";\r\nimport { useAppSelector } from \"@store\";\r\nimport { history } from \"@utils/history\";\r\nimport { AuthPaths } from \"@constants\";\r\nimport { LSTokenName } from \"@utils/LocaStorage\";\r\n\r\ninterface IProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const MainLayout: React.FC<IProps> = (props): JSX.Element => {\r\n  const { freezed } = useAppSelector((state) => state.app);\r\n  const { token } = useAppSelector((state) => state.user);\r\n\r\n  React.useEffect(() => {\r\n    if (token.trim() !== \"\") return;\r\n    history.push(AuthPaths.login);\r\n    localStorage.removeItem(LSTokenName);\r\n  }, [token]);\r\n\r\n  return (\r\n    <div className=\"mainLayout\">\r\n      <Header disabled={freezed} />\r\n      <Navigation disabled={freezed} />\r\n      <div className=\"container\">\r\n        <div className=\"mainLayout__content\">{props.children}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { Page } from \"@components\";\r\nimport { MainLayout } from \"@layouts\";\r\n\r\nexport const ForgotPassword: React.FC = (): JSX.Element => {\r\n  return (\r\n    <Page title=\"Восстановление пароля\">\r\n      <MainLayout>\r\n        <div className=\"forgotPassword\"></div>\r\n      </MainLayout>\r\n    </Page>\r\n  );\r\n};\r\n","import { Page } from \"@components\";\r\nimport { MainLayout } from \"@layouts\";\r\n\r\nexport const NotFound: React.FC = (): JSX.Element => {\r\n  return (\r\n    <Page title=\"Ошибка 404\">\r\n      <MainLayout>\r\n        <div className=\"notFound\">\r\n          <h1>Ошибка 404</h1>\r\n        </div>\r\n      </MainLayout>\r\n    </Page>\r\n  );\r\n};\r\n","import { Page } from \"@components\";\r\nimport { MainLayout } from \"@layouts\";\r\n\r\nexport const ServerError: React.FC = (): JSX.Element => {\r\n  return (\r\n    <Page title=\"Ошибка 500\">\r\n      <MainLayout>\r\n        <div className=\"notFound\">\r\n          <h1>Ошибка 500</h1>\r\n        </div>\r\n      </MainLayout>\r\n    </Page>\r\n  );\r\n};\r\n","import { Page } from \"@components\";\r\nimport { MainLayout } from \"@layouts\";\r\n\r\nexport const ConnectionError: React.FC = (): JSX.Element => {\r\n  return (\r\n    <Page title=\"Нет доступа к сети\">\r\n      <MainLayout>\r\n        <div className=\"notFound\">\r\n          <h1>Нет доступа к сети</h1>\r\n          <h3 className=\"mt-1\">Проверьте подключение к интернету</h3>\r\n        </div>\r\n      </MainLayout>\r\n    </Page>\r\n  );\r\n};\r\n","import { Page } from \"@components\";\r\nimport { MainLayout } from \"@layouts\";\r\n\r\nexport const InDeveloping: React.FC = (): JSX.Element => {\r\n  return (\r\n    <Page title=\"В разработке\">\r\n      <MainLayout>\r\n        <div className=\"notFound\">\r\n          <h1>В разработке</h1>\r\n          <h3 className=\"mt-1\">\r\n            Скоро эта страница будет доступна для эксплуатации\r\n          </h3>\r\n        </div>\r\n      </MainLayout>\r\n    </Page>\r\n  );\r\n};\r\n","import * as actions from \"@store/slice\";\r\nimport { IBanner } from \"@interfaces\";\r\nimport { AppDispatch } from \"@store\";\r\nimport { bannerServices } from \"@services\";\r\nimport { history } from \"@utils/history\";\r\nimport { AppPaths } from \"@constants\";\r\n\r\nexport const getBannersController = () => async (dispatch: AppDispatch) => {\r\n  try {\r\n    dispatch(actions.setAppFreezed(true));\r\n    dispatch(actions.bannerStartPending());\r\n\r\n    const response = await bannerServices.get();\r\n\r\n    const banners: IBanner[] = response.data;\r\n\r\n    dispatch(actions.bannerSetData(banners));\r\n  } catch (error: any) {\r\n    if (error.response) {\r\n      dispatch(actions.bannerSetError(error.response.data.message));\r\n    }\r\n  } finally {\r\n    dispatch(actions.setAppFreezed(false));\r\n    setTimeout(() => {\r\n      dispatch(actions.bannerStopPending());\r\n    }, 500);\r\n  }\r\n};\r\n\r\nexport const createBannerController =\r\n  (banner: FormData) => async (dispatch: AppDispatch) => {\r\n    try {\r\n      dispatch(actions.setAppFreezed(true));\r\n      dispatch(actions.bannerStartPending());\r\n\r\n      const response = await bannerServices.create(banner);\r\n\r\n      if (response.status === 201) history.push(AppPaths.banners);\r\n    } catch (error: any) {\r\n      if (error.response) {\r\n        dispatch(actions.bannerSetError(error.response.data.message));\r\n      }\r\n    } finally {\r\n      dispatch(actions.setAppFreezed(false));\r\n      setTimeout(() => {\r\n        dispatch(actions.bannerStopPending());\r\n      }, 500);\r\n    }\r\n  };\r\n\r\nexport const deleteBannerController =\r\n  (id: string) => async (dispatch: AppDispatch) => {\r\n    try {\r\n      dispatch(actions.setAppFreezed(true));\r\n      dispatch(actions.bannerStartPending());\r\n\r\n      const response = await bannerServices.delete(id);\r\n\r\n      if (response.status === 204) {\r\n        dispatch(actions.bannerRemoveBanner(id));\r\n      }\r\n    } catch (error: any) {\r\n      if (error.response) {\r\n        dispatch(actions.bannerSetError(error.response.data.message));\r\n      }\r\n    } finally {\r\n      dispatch(actions.setAppFreezed(false));\r\n      setTimeout(() => {\r\n        dispatch(actions.bannerStopPending());\r\n      }, 500);\r\n    }\r\n  };\r\n\r\nexport const bannerControllers = Object.freeze(\r\n  Object.seal({\r\n    get: getBannersController,\r\n    create: createBannerController,\r\n    delete: deleteBannerController,\r\n  })\r\n);\r\n","import * as actions from \"@store/slice\";\r\nimport { IBrand } from \"@interfaces\";\r\nimport { AppDispatch } from \"@store\";\r\nimport { brandServices } from \"@services\";\r\nimport { history } from \"@utils/history\";\r\nimport { AppPaths } from \"@constants\";\r\n\r\nexport const getBrandController = () => async (dispatch: AppDispatch) => {\r\n  try {\r\n    dispatch(actions.setAppFreezed(true));\r\n    dispatch(actions.brandStartPending());\r\n\r\n    const response = await brandServices.get();\r\n\r\n    const brands: IBrand[] = response.data;\r\n\r\n    dispatch(actions.brandSetData(brands));\r\n  } catch (error: any) {\r\n    if (error.response) {\r\n      dispatch(actions.brandSetError(error.response.data.message));\r\n    }\r\n  } finally {\r\n    dispatch(actions.setAppFreezed(false));\r\n    setTimeout(() => {\r\n      dispatch(actions.brandStopPending());\r\n    }, 500);\r\n  }\r\n};\r\n\r\nexport const createBrandController =\r\n  (brand: FormData) => async (dispatch: AppDispatch) => {\r\n    try {\r\n      dispatch(actions.setAppFreezed(true));\r\n      dispatch(actions.brandStartPending());\r\n\r\n      const response = await brandServices.create(brand);\r\n\r\n      if (response.status === 201) history.push(AppPaths.brands);\r\n    } catch (error: any) {\r\n      if (error.response) {\r\n        dispatch(actions.brandSetError(error.response.data.message));\r\n      }\r\n    } finally {\r\n      dispatch(actions.setAppFreezed(false));\r\n      setTimeout(() => {\r\n        dispatch(actions.brandStopPending());\r\n      }, 500);\r\n    }\r\n  };\r\n\r\nexport const deleteBrandController =\r\n  (id: string) => async (dispatch: AppDispatch) => {\r\n    try {\r\n      dispatch(actions.setAppFreezed(true));\r\n      dispatch(actions.brandStartPending());\r\n\r\n      const response = await brandServices.delete(id);\r\n\r\n      if (response.status === 204) {\r\n        dispatch(actions.brandRemove(id));\r\n      }\r\n    } catch (error: any) {\r\n      if (error.response) {\r\n        dispatch(actions.brandSetError(error.response.data.message));\r\n      }\r\n    } finally {\r\n      dispatch(actions.setAppFreezed(false));\r\n      setTimeout(() => {\r\n        dispatch(actions.brandStopPending());\r\n      }, 500);\r\n    }\r\n  };\r\n\r\nexport const brandControllers = Object.freeze(\r\n  Object.seal({\r\n    get: getBrandController,\r\n    create: createBrandController,\r\n    delete: deleteBrandController,\r\n  })\r\n);\r\n","import * as actions from \"@store/slice\";\r\nimport { ICategory } from \"@interfaces\";\r\nimport { AppDispatch } from \"@store\";\r\nimport { categoryServices } from \"@services\";\r\nimport { history } from \"@utils/history\";\r\nimport { AppPaths } from \"@constants\";\r\n\r\nexport const getCategorysController = () => async (dispatch: AppDispatch) => {\r\n  try {\r\n    dispatch(actions.setAppFreezed(true));\r\n    dispatch(actions.categoryStartPending());\r\n\r\n    const response = await categoryServices.get();\r\n\r\n    const categorys: ICategory[] = response.data;\r\n\r\n    dispatch(actions.categorySetData(categorys));\r\n  } catch (error: any) {\r\n    if (error.response) {\r\n      dispatch(actions.categorySetError(error.response.data.message));\r\n    }\r\n  } finally {\r\n    dispatch(actions.setAppFreezed(false));\r\n    setTimeout(() => {\r\n      dispatch(actions.categoryStopPending());\r\n    }, 500);\r\n  }\r\n};\r\n\r\nexport const getPopularCategoryController =\r\n  () => async (dispatch: AppDispatch) => {\r\n    try {\r\n      dispatch(actions.setAppFreezed(true));\r\n      dispatch(actions.categoryStartPending());\r\n\r\n      const response = await categoryServices.getPopular();\r\n\r\n      const categorys: ICategory[] = response.data;\r\n\r\n      dispatch(actions.categorySetPopularData(categorys));\r\n    } catch (error: any) {\r\n      if (error.response) {\r\n        dispatch(actions.categorySetError(error.response.data.message));\r\n      }\r\n    } finally {\r\n      dispatch(actions.setAppFreezed(false));\r\n      setTimeout(() => {\r\n        dispatch(actions.categoryStopPending());\r\n      }, 500);\r\n    }\r\n  };\r\n\r\nexport const createCategoryController =\r\n  (category: FormData) => async (dispatch: AppDispatch) => {\r\n    try {\r\n      dispatch(actions.setAppFreezed(true));\r\n      dispatch(actions.categoryStartPending());\r\n\r\n      const response = await categoryServices.create(category);\r\n\r\n      if (response.status === 201) history.push(AppPaths.categories);\r\n    } catch (error: any) {\r\n      if (error.response) {\r\n        dispatch(actions.categorySetError(error.response.data.message));\r\n      }\r\n    } finally {\r\n      dispatch(actions.setAppFreezed(false));\r\n      setTimeout(() => {\r\n        dispatch(actions.categoryStopPending());\r\n      }, 500);\r\n    }\r\n  };\r\n\r\nexport const editCategoryController =\r\n  (category: FormData, id: string) => async (dispatch: AppDispatch) => {\r\n    try {\r\n      dispatch(actions.setAppFreezed(true));\r\n      dispatch(actions.categoryStartPending());\r\n\r\n      const response = await categoryServices.edit(category, id);\r\n\r\n      if (response.status === 204) history.push(AppPaths.categories);\r\n    } catch (error: any) {\r\n      if (error.response) {\r\n        dispatch(actions.categorySetError(error.response.data.message));\r\n      }\r\n    } finally {\r\n      dispatch(actions.setAppFreezed(false));\r\n      setTimeout(() => {\r\n        dispatch(actions.categoryStopPending());\r\n      }, 500);\r\n    }\r\n  };\r\n\r\nexport const deleteCategoryController =\r\n  (id: string) => async (dispatch: AppDispatch) => {\r\n    try {\r\n      dispatch(actions.setAppFreezed(true));\r\n      dispatch(actions.categoryStartPending());\r\n\r\n      const response = await categoryServices.delete(id);\r\n\r\n      if (response.status === 200) {\r\n        dispatch(actions.categoryRemove(id));\r\n        history.push(AppPaths.categories);\r\n      }\r\n    } catch (error: any) {\r\n      if (error.response) {\r\n        dispatch(actions.categorySetError(error.response.data.message));\r\n      }\r\n    } finally {\r\n      dispatch(actions.setAppFreezed(false));\r\n      setTimeout(() => {\r\n        dispatch(actions.categoryStopPending());\r\n      }, 500);\r\n    }\r\n  };\r\n\r\nexport const categoryControllers = Object.freeze(\r\n  Object.seal({\r\n    get: getCategorysController,\r\n    create: createCategoryController,\r\n    edit: editCategoryController,\r\n    delete: deleteCategoryController,\r\n    getPopular: getPopularCategoryController,\r\n  })\r\n);\r\n","import * as actions from \"@store/slice\";\r\nimport { IDeliveryType } from \"@interfaces\";\r\nimport { AppDispatch } from \"@store\";\r\nimport { deliveryTypeServices } from \"@services\";\r\nimport { history } from \"@utils/history\";\r\nimport { AppPaths } from \"@constants\";\r\n\r\nexport const getDeliveryTypesController =\r\n  () => async (dispatch: AppDispatch) => {\r\n    try {\r\n      dispatch(actions.setAppFreezed(true));\r\n      dispatch(actions.deliveryTypeStartPending());\r\n\r\n      const response = await deliveryTypeServices.get();\r\n\r\n      const deliveryTypes: IDeliveryType[] = response.data;\r\n\r\n      dispatch(actions.deliveryTypeSetData(deliveryTypes));\r\n    } catch (error: any) {\r\n      if (error.response) {\r\n        dispatch(actions.deliveryTypeSetError(error.response.data.message));\r\n      }\r\n    } finally {\r\n      dispatch(actions.setAppFreezed(false));\r\n      setTimeout(() => {\r\n        dispatch(actions.deliveryTypeStopPending());\r\n      }, 500);\r\n    }\r\n  };\r\n\r\nexport const getByIdDeliveryTypesController =\r\n  (id: string) => async (dispatch: AppDispatch) => {\r\n    try {\r\n      dispatch(actions.setAppFreezed(true));\r\n      dispatch(actions.deliveryTypeStartPending());\r\n\r\n      const response = await deliveryTypeServices.getById(id);\r\n\r\n      const deliveryType: IDeliveryType = response.data;\r\n\r\n      dispatch(actions.deliveryTypeSetById(deliveryType));\r\n    } catch (error: any) {\r\n      if (error.response) {\r\n        dispatch(actions.deliveryTypeSetError(error.response.data.message));\r\n      }\r\n    } finally {\r\n      dispatch(actions.setAppFreezed(false));\r\n      setTimeout(() => {\r\n        dispatch(actions.deliveryTypeStopPending());\r\n      }, 500);\r\n    }\r\n  };\r\n\r\nexport const createDeliveryTypeController =\r\n  (deliveryType: Omit<IDeliveryType, \"id\">) =>\r\n  async (dispatch: AppDispatch) => {\r\n    try {\r\n      dispatch(actions.setAppFreezed(true));\r\n      dispatch(actions.deliveryTypeStartPending());\r\n\r\n      const response = await deliveryTypeServices.create(deliveryType);\r\n\r\n      if (response.status === 200) history.push(AppPaths.deliveryType);\r\n    } catch (error: any) {\r\n      if (error.response) {\r\n        dispatch(actions.deliveryTypeSetError(error.response.data.message));\r\n      }\r\n    } finally {\r\n      dispatch(actions.setAppFreezed(false));\r\n      setTimeout(() => {\r\n        dispatch(actions.deliveryTypeStopPending());\r\n      }, 500);\r\n    }\r\n  };\r\n\r\nexport const editDeliveryTypeController =\r\n  (deliveryType: Omit<IDeliveryType, \"id\">, id: string) =>\r\n  async (dispatch: AppDispatch) => {\r\n    try {\r\n      dispatch(actions.setAppFreezed(true));\r\n      dispatch(actions.deliveryTypeStartPending());\r\n\r\n      const response = await deliveryTypeServices.edit(deliveryType, id);\r\n\r\n      if (response.status === 204) history.push(AppPaths.deliveryType);\r\n    } catch (error: any) {\r\n      if (error.response) {\r\n        dispatch(actions.deliveryTypeSetError(error.response.data.message));\r\n      }\r\n    } finally {\r\n      dispatch(actions.setAppFreezed(false));\r\n      setTimeout(() => {\r\n        dispatch(actions.deliveryTypeStopPending());\r\n      }, 500);\r\n    }\r\n  };\r\n\r\nexport const deleteDeliveryTypeController =\r\n  (id: string) => async (dispatch: AppDispatch) => {\r\n    try {\r\n      dispatch(actions.setAppFreezed(true));\r\n      dispatch(actions.deliveryTypeStartPending());\r\n\r\n      const response = await deliveryTypeServices.delete(id);\r\n\r\n      if (response.status === 204) {\r\n        dispatch(actions.deliveryTypeRemove(id));\r\n      }\r\n    } catch (error: any) {\r\n      if (error.response) {\r\n        dispatch(actions.deliveryTypeSetError(error.response.data.message));\r\n      }\r\n    } finally {\r\n      dispatch(actions.setAppFreezed(false));\r\n      setTimeout(() => {\r\n        dispatch(actions.deliveryTypeStopPending());\r\n      }, 500);\r\n    }\r\n  };\r\n\r\nexport const deliveryTypeControllers = Object.freeze(\r\n  Object.seal({\r\n    get: getDeliveryTypesController,\r\n    getById: getByIdDeliveryTypesController,\r\n    create: createDeliveryTypeController,\r\n    edit: editDeliveryTypeController,\r\n    delete: deleteDeliveryTypeController,\r\n  })\r\n);\r\n","import * as actions from \"@store/slice\";\r\nimport {\r\n  ICharacteristic,\r\n  ICharacteristicValue,\r\n  ICharacteristicWithValue,\r\n  IDeliveryType,\r\n} from \"@interfaces\";\r\nimport { AppDispatch } from \"@store\";\r\nimport { characteristicServices } from \"@services\";\r\nimport { history } from \"@utils/history\";\r\nimport { AppPaths } from \"@constants\";\r\n\r\nexport const getCharacteristicController =\r\n  () => async (dispatch: AppDispatch) => {\r\n    try {\r\n      dispatch(actions.characteristicStartPending());\r\n\r\n      const response = await characteristicServices.get();\r\n\r\n      const characteristics: ICharacteristic[] = response.data;\r\n\r\n      dispatch(actions.characteristicSetData(characteristics));\r\n    } catch (error: any) {\r\n      if (error.response) {\r\n        dispatch(actions.characteristicSetError(error.response.data.message));\r\n      }\r\n    } finally {\r\n      setTimeout(() => {\r\n        dispatch(actions.characteristicStopPending());\r\n      }, 500);\r\n    }\r\n  };\r\n\r\nexport const getCharacteristicWithValueController =\r\n  () => async (dispatch: AppDispatch) => {\r\n    try {\r\n      dispatch(actions.characteristicStartPending());\r\n\r\n      const response = await characteristicServices.getWithValue();\r\n\r\n      const characteristics: ICharacteristicWithValue[] = response.data;\r\n\r\n      dispatch(actions.characteristicSetDataWithValues(characteristics));\r\n    } catch (error: any) {\r\n      if (error.response) {\r\n        dispatch(actions.characteristicSetError(error.response.data.message));\r\n      }\r\n    } finally {\r\n      setTimeout(() => {\r\n        dispatch(actions.characteristicStopPending());\r\n      }, 500);\r\n    }\r\n  };\r\n\r\nexport const getCharacteristicValueController =\r\n  () => async (dispatch: AppDispatch) => {\r\n    try {\r\n      dispatch(actions.characteristicStartPending());\r\n\r\n      const response = await characteristicServices.getWithValue();\r\n\r\n      const characteristics: ICharacteristicValue[] = response.data;\r\n\r\n      dispatch(actions.characteristicSetValues(characteristics));\r\n    } catch (error: any) {\r\n      if (error.response) {\r\n        dispatch(actions.characteristicSetError(error.response.data.message));\r\n      }\r\n    } finally {\r\n      setTimeout(() => {\r\n        dispatch(actions.characteristicStopPending());\r\n      }, 500);\r\n    }\r\n  };\r\n\r\nexport const createCharacteristicController =\r\n  (characteristic: { name: string }) => async (dispatch: AppDispatch) => {\r\n    try {\r\n      dispatch(actions.characteristicStartPending());\r\n\r\n      const response = await characteristicServices.create(characteristic);\r\n\r\n      if (response.status === 200) history.push(AppPaths.characteristics);\r\n    } catch (error: any) {\r\n      if (error.response) {\r\n        dispatch(actions.characteristicSetError(error.response.data.message));\r\n      }\r\n    } finally {\r\n      setTimeout(() => {\r\n        dispatch(actions.characteristicStopPending());\r\n      }, 500);\r\n    }\r\n  };\r\n\r\nexport const createCharacteristicValueController =\r\n  (characteristicValue: Omit<ICharacteristicValue, \"id\">) =>\r\n  async (dispatch: AppDispatch) => {\r\n    try {\r\n      dispatch(actions.characteristicStartPending());\r\n\r\n      const response = await characteristicServices.createValue(\r\n        characteristicValue\r\n      );\r\n\r\n      if (response.status === 200) history.push(AppPaths.characteristics);\r\n    } catch (error: any) {\r\n      if (error.response) {\r\n        dispatch(actions.characteristicSetError(error.response.data.message));\r\n      }\r\n    } finally {\r\n      setTimeout(() => {\r\n        dispatch(actions.characteristicStopPending());\r\n      }, 500);\r\n    }\r\n  };\r\n\r\nexport const editCharacteristicController =\r\n  (characteristic: { name: string }, id: string) =>\r\n  async (dispatch: AppDispatch) => {\r\n    try {\r\n      dispatch(actions.characteristicStartPending());\r\n\r\n      const response = await characteristicServices.edit(characteristic, id);\r\n\r\n      if (response.status === 204) history.push(AppPaths.characteristics);\r\n    } catch (error: any) {\r\n      if (error.response) {\r\n        dispatch(actions.characteristicSetError(error.response.data.message));\r\n      }\r\n    } finally {\r\n      setTimeout(() => {\r\n        dispatch(actions.characteristicStopPending());\r\n      }, 500);\r\n    }\r\n  };\r\n\r\nexport const editCharacteristicValueController =\r\n  (characteristicValue: Omit<ICharacteristicValue, \"id\">, id: string) =>\r\n  async (dispatch: AppDispatch) => {\r\n    try {\r\n      dispatch(actions.characteristicStartPending());\r\n\r\n      const response = await characteristicServices.editValue(\r\n        characteristicValue,\r\n        id\r\n      );\r\n\r\n      if (response.status === 204) history.push(AppPaths.characteristics);\r\n    } catch (error: any) {\r\n      if (error.response) {\r\n        dispatch(actions.characteristicSetError(error.response.data.message));\r\n      }\r\n    } finally {\r\n      setTimeout(() => {\r\n        dispatch(actions.characteristicStopPending());\r\n      }, 500);\r\n    }\r\n  };\r\n\r\nexport const deleteCharacteristicController =\r\n  (id: string) => async (dispatch: AppDispatch) => {\r\n    try {\r\n      dispatch(actions.setAppFreezed(true));\r\n      dispatch(actions.characteristicStartPending());\r\n\r\n      const response = await characteristicServices.delete(id);\r\n\r\n      if (response.status === 204) {\r\n        dispatch(actions.characteristicRemove(id));\r\n      }\r\n    } catch (error: any) {\r\n      if (error.response) {\r\n        dispatch(actions.characteristicSetError(error.response.data.message));\r\n      }\r\n    } finally {\r\n      dispatch(actions.setAppFreezed(false));\r\n      setTimeout(() => {\r\n        dispatch(actions.characteristicStopPending());\r\n      }, 500);\r\n    }\r\n  };\r\n\r\nexport const deleteCharacteristicValueController =\r\n  (id: string) => async (dispatch: AppDispatch) => {\r\n    try {\r\n      dispatch(actions.setAppFreezed(true));\r\n      dispatch(actions.characteristicStartPending());\r\n\r\n      const response = await characteristicServices.deleteValue(id);\r\n\r\n      if (response.status === 204) {\r\n        dispatch(actions.characteristicRemoveValue(id));\r\n      }\r\n    } catch (error: any) {\r\n      if (error.response) {\r\n        dispatch(actions.characteristicSetError(error.response.data.message));\r\n      }\r\n    } finally {\r\n      dispatch(actions.setAppFreezed(false));\r\n      setTimeout(() => {\r\n        dispatch(actions.characteristicStopPending());\r\n      }, 500);\r\n    }\r\n  };\r\n\r\nexport const characteristicControllers = Object.freeze(\r\n  Object.seal({\r\n    get: getCharacteristicController,\r\n    getWithValues: getCharacteristicWithValueController,\r\n    getValues: getCharacteristicValueController,\r\n    create: createCharacteristicController,\r\n    createValue: createCharacteristicValueController,\r\n    editValue: editCharacteristicValueController,\r\n    edit: editCharacteristicController,\r\n    delete: deleteCharacteristicController,\r\n    deleteValue: deleteCharacteristicValueController,\r\n  })\r\n);\r\n","import * as actions from \"@store/slice\";\r\nimport { IProduct, IProductsParams } from \"@interfaces\";\r\nimport { AppDispatch, useAppSelector } from \"@store\";\r\nimport { productServices } from \"@services\";\r\nimport { history } from \"@utils/history\";\r\nimport { AppPaths } from \"@constants\";\r\nimport { setStatuses } from \"@store/slice\";\r\n\r\nexport const getProductController =\r\n  (params: IProductsParams, payload: any = {}) =>\r\n  async (dispatch: AppDispatch) => {\r\n    const categoryId = params.categoryId || \"\";\r\n    const isLoadedCategory = payload.statuses[categoryId];\r\n    if (isLoadedCategory) {\r\n      dispatch(\r\n        actions.productSetData({\r\n          data: payload.data,\r\n          totalPages: payload.pageCount,\r\n        })\r\n      );\r\n\r\n      let newStatuses = {\r\n        ...payload.statuses,\r\n        [categoryId]: { loaded: true },\r\n      };\r\n\r\n      dispatch(setStatuses(newStatuses));\r\n      return;\r\n    }\r\n\r\n    try {\r\n      dispatch(actions.setAppFreezed(true));\r\n      dispatch(actions.productStartPending());\r\n\r\n      const response = await productServices.get(params);\r\n\r\n      const product: IProduct[] = response.data.data;\r\n      const totalPages: number = response.data.totalPages;\r\n\r\n      dispatch(actions.productSetData({ data: product, totalPages }));\r\n    } catch (error: any) {\r\n      if (error.response) {\r\n        dispatch(actions.productSetError(error.response.data.message));\r\n      }\r\n    } finally {\r\n      dispatch(actions.setAppFreezed(false));\r\n      setTimeout(() => {\r\n        dispatch(actions.productStopPending());\r\n        dispatch(actions.productStopPaginationPending());\r\n      }, 500);\r\n    }\r\n  };\r\n\r\nexport const getProductByIdController =\r\n  (id: string) => async (dispatch: AppDispatch) => {\r\n    try {\r\n      dispatch(actions.setAppFreezed(true));\r\n      dispatch(actions.productStartPending());\r\n\r\n      const response = await productServices.getById(id);\r\n\r\n      const product: IProduct = response.data;\r\n\r\n      dispatch(actions.productSetDataById(product));\r\n    } catch (error: any) {\r\n      if (error.response) {\r\n        dispatch(actions.productSetError(error.response.data.message));\r\n      }\r\n    } finally {\r\n      dispatch(actions.setAppFreezed(false));\r\n      setTimeout(() => {\r\n        dispatch(actions.productStopPending());\r\n        dispatch(actions.productStopPaginationPending());\r\n      }, 500);\r\n    }\r\n  };\r\n\r\nexport const createProductController =\r\n  (product: FormData) => async (dispatch: AppDispatch) => {\r\n    try {\r\n      dispatch(actions.setAppFreezed(true));\r\n      dispatch(actions.productStartPending());\r\n\r\n      const response = await productServices.create(product);\r\n\r\n      if (response.status === 201) history.push(AppPaths.products);\r\n    } catch (error: any) {\r\n      if (error.response) {\r\n        dispatch(actions.productSetError(error.response.data.message));\r\n      }\r\n    } finally {\r\n      dispatch(actions.setAppFreezed(false));\r\n      setTimeout(() => {\r\n        dispatch(actions.productStopPending());\r\n        dispatch(actions.productStopPaginationPending());\r\n      }, 500);\r\n    }\r\n  };\r\n\r\nexport const deleteProductController =\r\n  (id: string) => async (dispatch: AppDispatch) => {\r\n    try {\r\n      dispatch(actions.productStartPaginationPending());\r\n      const response = await productServices.delete(id);\r\n\r\n      if (response.status === 204) dispatch(actions.productRemove(id));\r\n    } catch (error: any) {\r\n      if (error.response) {\r\n        dispatch(actions.productSetError(error.response.data.message));\r\n      }\r\n    } finally {\r\n      dispatch(actions.setAppFreezed(false));\r\n      setTimeout(() => {\r\n        dispatch(actions.productStopPaginationPending());\r\n      }, 500);\r\n    }\r\n  };\r\n\r\nexport const editProductController =\r\n  (product: FormData, id: string) => async (dispatch: AppDispatch) => {\r\n    try {\r\n      dispatch(actions.setAppFreezed(true));\r\n      dispatch(actions.productStartPending());\r\n\r\n      const response = await productServices.edit(product, id);\r\n\r\n      if (response.status === 204) history.push(AppPaths.products);\r\n    } catch (error: any) {\r\n      if (error.response) {\r\n        dispatch(actions.productSetError(error.response.data.message));\r\n      }\r\n    } finally {\r\n      dispatch(actions.setAppFreezed(false));\r\n      setTimeout(() => {\r\n        dispatch(actions.productStopPending());\r\n        dispatch(actions.productStopPaginationPending());\r\n      }, 500);\r\n    }\r\n  };\r\n\r\nexport const productControllers = Object.freeze(\r\n  Object.seal({\r\n    get: getProductController,\r\n    getById: getProductByIdController,\r\n    create: createProductController,\r\n    delete: deleteProductController,\r\n    edit: editProductController,\r\n  })\r\n);\r\n","import * as actions from \"@store/slice\";\r\nimport { IPaymentTypes } from \"@interfaces\";\r\nimport { AppDispatch } from \"@store\";\r\nimport { paymentTypeServices } from \"@services\";\r\nimport { history } from \"@utils/history\";\r\nimport { AppPaths } from \"@constants\";\r\n\r\nexport const getPaymentTypesController =\r\n  () => async (dispatch: AppDispatch) => {\r\n    try {\r\n      dispatch(actions.setAppFreezed(true));\r\n      dispatch(actions.paymentTypesStartPending());\r\n\r\n      const response = await paymentTypeServices.get();\r\n\r\n      const paymentTypes: IPaymentTypes[] = response.data;\r\n\r\n      dispatch(actions.paymentTypesSetData(paymentTypes));\r\n    } catch (error: any) {\r\n      if (error.response) {\r\n        dispatch(actions.paymentTypesSetError(error.response.data.message));\r\n      }\r\n    } finally {\r\n      dispatch(actions.setAppFreezed(false));\r\n      setTimeout(() => {\r\n        dispatch(actions.paymentTypesStopPending());\r\n      }, 500);\r\n    }\r\n  };\r\n\r\nexport const getByIdPaymentTypesController =\r\n  (id: string) => async (dispatch: AppDispatch) => {\r\n    try {\r\n      dispatch(actions.setAppFreezed(true));\r\n      dispatch(actions.paymentTypesStartPending());\r\n\r\n      const response = await paymentTypeServices.getById(id);\r\n\r\n      const paymentType: IPaymentTypes = response.data;\r\n\r\n      dispatch(actions.paymentTypesSetDataById(paymentType));\r\n    } catch (error: any) {\r\n      if (error.response) {\r\n        dispatch(actions.paymentTypesSetError(error.response.data.message));\r\n      }\r\n    } finally {\r\n      dispatch(actions.setAppFreezed(false));\r\n      setTimeout(() => {\r\n        dispatch(actions.paymentTypesStopPending());\r\n      }, 500);\r\n    }\r\n  };\r\n\r\nexport const createPaymentTypesController =\r\n  (paymentTypes: FormData) => async (dispatch: AppDispatch) => {\r\n    try {\r\n      dispatch(actions.setAppFreezed(true));\r\n      dispatch(actions.paymentTypesStartPending());\r\n\r\n      const response = await paymentTypeServices.create(paymentTypes);\r\n\r\n      if (response.status === 200) history.push(AppPaths.paymentTypes);\r\n    } catch (error: any) {\r\n      if (error.response) {\r\n        dispatch(actions.paymentTypesSetError(error.response.data.message));\r\n      }\r\n    } finally {\r\n      dispatch(actions.setAppFreezed(false));\r\n      setTimeout(() => {\r\n        dispatch(actions.paymentTypesStopPending());\r\n      }, 500);\r\n    }\r\n  };\r\n\r\nexport const editPaymentTypesController =\r\n  (paymentTypes: FormData, id: string) => async (dispatch: AppDispatch) => {\r\n    try {\r\n      dispatch(actions.setAppFreezed(true));\r\n      dispatch(actions.paymentTypesStartPending());\r\n\r\n      const response = await paymentTypeServices.edit(paymentTypes, id);\r\n\r\n      if (response.status === 204) history.push(AppPaths.paymentTypes);\r\n    } catch (error: any) {\r\n      if (error.response) {\r\n        dispatch(actions.paymentTypesSetError(error.response.data.message));\r\n      }\r\n    } finally {\r\n      dispatch(actions.setAppFreezed(false));\r\n      setTimeout(() => {\r\n        dispatch(actions.paymentTypesStopPending());\r\n      }, 500);\r\n    }\r\n  };\r\n\r\nexport const deletePaymentTypesController =\r\n  (id: string) => async (dispatch: AppDispatch) => {\r\n    try {\r\n      dispatch(actions.setAppFreezed(true));\r\n      dispatch(actions.paymentTypesStartPending());\r\n\r\n      const response = await paymentTypeServices.delete(id);\r\n\r\n      if (response.status === 204) {\r\n        dispatch(actions.paymentTypesRemove(id));\r\n      }\r\n    } catch (error: any) {\r\n      if (error.response) {\r\n        dispatch(actions.paymentTypesSetError(error.response.data.message));\r\n      }\r\n    } finally {\r\n      dispatch(actions.setAppFreezed(false));\r\n      setTimeout(() => {\r\n        dispatch(actions.paymentTypesStopPending());\r\n      }, 500);\r\n    }\r\n  };\r\n\r\nexport const paymentTypesControllers = Object.freeze(\r\n  Object.seal({\r\n    get: getPaymentTypesController,\r\n    getById: getByIdPaymentTypesController,\r\n    create: createPaymentTypesController,\r\n    edit: editPaymentTypesController,\r\n    delete: deletePaymentTypesController,\r\n  })\r\n);\r\n","import * as actions from \"@store/slice\";\r\nimport { IOrder, IOrdersParams } from \"@interfaces\";\r\nimport { AppDispatch } from \"@store\";\r\nimport { ordersServices } from \"@services\";\r\nimport { history } from \"@utils/history\";\r\nimport { AppPaths } from \"@constants\";\r\n\r\nexport const getOrdersController =\r\n  (params: IOrdersParams) => async (dispatch: AppDispatch) => {\r\n    try {\r\n      dispatch(actions.setAppFreezed(true));\r\n      dispatch(actions.ordersStartPending());\r\n\r\n      const response = await ordersServices.get(params);\r\n\r\n      const orders: {data: IOrder[], totalPages: number} = response.data;\r\n\r\n      dispatch(actions.ordersSetData(orders));\r\n    } catch (error: any) {\r\n      if (error.response) {\r\n        dispatch(actions.ordersSetError(error.response.data.message));\r\n      }\r\n    } finally {\r\n      dispatch(actions.setAppFreezed(false));\r\n      setTimeout(() => {\r\n        dispatch(actions.ordersStopPending());\r\n      }, 500);\r\n    }\r\n  };\r\n\r\nexport const getByIdOrdersController =\r\n  (id: string) => async (dispatch: AppDispatch) => {\r\n    try {\r\n      dispatch(actions.setAppFreezed(true));\r\n      dispatch(actions.ordersStartPending());\r\n\r\n      const response = await ordersServices.getById(id);\r\n\r\n      const orders: IOrder = response.data;\r\n\r\n      dispatch(actions.ordersSetById(orders));\r\n    } catch (error: any) {\r\n      if (error.response) {\r\n        dispatch(actions.ordersSetError(error.response.data.message));\r\n      }\r\n    } finally {\r\n      dispatch(actions.setAppFreezed(false));\r\n      setTimeout(() => {\r\n        dispatch(actions.ordersStopPending());\r\n      }, 500);\r\n    }\r\n  };\r\n\r\nexport const editOrdersControllersController =\r\n  (orders: IOrder) =>\r\n  async (dispatch: AppDispatch) => {\r\n    try {\r\n      dispatch(actions.setAppFreezed(true));\r\n\r\n      const response = await ordersServices.edit({orderStatusId: orders.orderStatusId}, orders.orderId);\r\n\r\n      dispatch(actions.ordersEdit(orders));\r\n\r\n      if (response.status === 204) history.push(AppPaths.orders);\r\n    } catch (error: any) {\r\n      if (error.response) {\r\n        dispatch(actions.ordersSetError(error.response.data.message));\r\n      }\r\n    } finally {\r\n      dispatch(actions.setAppFreezed(false));\r\n    }\r\n  };\r\n\r\nexport const ordersControllers = Object.freeze(\r\n  Object.seal({\r\n    get: getOrdersController,\r\n    getById: getByIdOrdersController,\r\n    edit: editOrdersControllersController,\r\n  })\r\n);\r\n","import * as actions from \"@store/slice\";\r\nimport { IUserItem, IUserItemInfo, IUsersParams } from \"@interfaces\";\r\nimport { AppDispatch } from \"@store\";\r\nimport { usersServices } from \"@services\";\r\n\r\nexport const getUsersController =\r\n  (params: IUsersParams): any => async (dispatch: AppDispatch) => {\r\n    try {\r\n      dispatch(actions.setAppFreezed(true));\r\n      dispatch(actions.usersStartPending());\r\n\r\n      const response = await usersServices.get({\r\n        pageSize: 7, \r\n        pageNumber: params.page,\r\n        query: params.query,\r\n      });\r\n\r\n      const users: {data: IUserItem[], totalPages: number} = response.data;\r\n\r\n      dispatch(actions.usersSetData(users));\r\n    } catch (error: any) {\r\n      if (error.response) {\r\n        dispatch(actions.usersSetError(error.response.data.message));\r\n      }\r\n    } finally {\r\n      dispatch(actions.setAppFreezed(false));\r\n      setTimeout(() => {\r\n        dispatch(actions.usersStopPending());\r\n      }, 500);\r\n    }\r\n  };\r\n\r\nexport const getUsersByIdController =\r\n  (id: string) => async (dispatch: AppDispatch) => {\r\n    try {\r\n      dispatch(actions.setAppFreezed(true));\r\n      dispatch(actions.usersStartPending());\r\n\r\n      const response = await usersServices.getById(id);\r\n\r\n      const users: IUserItemInfo = response.data;\r\n\r\n      dispatch(actions.usersSetDataById(users));\r\n    } catch (error: any) {\r\n      if (error.response) {\r\n        dispatch(actions.usersSetError(error.response.data.message));\r\n      }\r\n    } finally {\r\n      dispatch(actions.setAppFreezed(false));\r\n      setTimeout(() => {\r\n        dispatch(actions.usersStopPending());\r\n      }, 500);\r\n    }\r\n  };\r\n\r\nexport const editUsersController =\r\n  (params: IUsersParams, roleId: number, id: string): any =>\r\n  async (dispatch: AppDispatch) => {\r\n    try {\r\n      dispatch(actions.setAppFreezed(true));\r\n      dispatch(actions.usersStartPending());\r\n\r\n      await usersServices.edit({ roleId }, id);\r\n\r\n      const response = await usersServices.get({\r\n        pageSize: 7, \r\n        pageNumber: params.page,\r\n        query: params.query,\r\n      });\r\n\r\n      const users: {data: IUserItem[], totalPages: number} = response.data;\r\n\r\n      dispatch(actions.usersSetData(users));\r\n    } catch (error: any) {\r\n      if (error.response) {\r\n        dispatch(actions.usersSetError(error.response.data.message));\r\n      }\r\n    } finally {\r\n      dispatch(actions.setAppFreezed(false));\r\n      setTimeout(() => {\r\n        dispatch(actions.usersStopPending());\r\n      }, 500);\r\n    }\r\n  };\r\n\r\nexport const usersControllers = Object.freeze(\r\n  Object.seal({\r\n    get: getUsersController,\r\n    getById: getUsersByIdController,\r\n    edit: editUsersController,\r\n  })\r\n);\r\n","import React from \"react\";\r\nimport { Image, Link, Page } from \"@components\";\r\nimport { MainLayout } from \"@layouts\";\r\nimport { AppPaths } from \"@constants\";\r\nimport { DeleteIcon } from \"@icons\";\r\nimport { useAppDispatch, useAppSelector } from \"@store\";\r\nimport { bannerControllers } from \"@controllers\";\r\nimport { BaseUrlWithoutApi } from \"@utils/BaseUrl\";\r\n\r\nexport const Banners: React.FC = (): JSX.Element => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const { data, pending } = useAppSelector((state) => state.banner);\r\n\r\n  const handleRemoveBanner = React.useCallback(\r\n    (id: string) => {\r\n      dispatch(bannerControllers.delete(id));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    dispatch(bannerControllers.get());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Page title=\"Баннеры\">\r\n      <MainLayout>\r\n        <div className=\"banners\">\r\n          <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n            <h1 className=\"title\">Баннеры</h1>\r\n            <Link to={AppPaths.addBanner} className=\"button button-primary\">\r\n              Добавить баннер\r\n            </Link>\r\n          </div>\r\n          <div className=\"banner__list\">\r\n            {!pending &&\r\n              data.map((item, index) => (\r\n                <div className=\"banner__container\" key={index}>\r\n                  <a\r\n                    draggable={false}\r\n                    href={item.href}\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer\"\r\n                    className=\"banner__image\"\r\n                  >\r\n                    <Image\r\n                      src={BaseUrlWithoutApi + item.imagePath}\r\n                      alt={\"banner\" + index}\r\n                      width={800}\r\n                      height={225}\r\n                    />\r\n                  </a>\r\n                  <div className=\"banner__tools\">\r\n                    <button\r\n                      className=\"banner__btn banner__delete-btn\"\r\n                      onClick={() => handleRemoveBanner(item.id)}\r\n                    >\r\n                      <DeleteIcon size={24} />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n          </div>\r\n        </div>\r\n      </MainLayout>\r\n    </Page>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Image, Link, Page } from \"@components\";\r\nimport { MainLayout } from \"@layouts\";\r\nimport { AppPaths } from \"@constants\";\r\nimport { DeleteIcon } from \"@icons\";\r\nimport { useAppDispatch, useAppSelector } from \"@store\";\r\nimport { brandControllers } from \"@controllers\";\r\nimport { BaseUrlWithoutApi } from \"@utils/BaseUrl\";\r\n\r\nexport const Brands: React.FC = (): JSX.Element => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const { data, pending } = useAppSelector((state) => state.brand);\r\n\r\n  const handleRemoveBanner = React.useCallback(\r\n    (id: string) => {\r\n      dispatch(brandControllers.delete(id));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    dispatch(brandControllers.get());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Page title=\"Бренды\">\r\n      <MainLayout>\r\n        <div className=\"banners\">\r\n          <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n            <h1 className=\"title\">Бренды</h1>\r\n            <Link to={AppPaths.addBrand} className=\"button button-primary\">\r\n              Добавить бренд\r\n            </Link>\r\n          </div>\r\n          <div className=\"banner__list\">\r\n            {!pending &&\r\n              data.map((item, index) => (\r\n                <div className=\"banner__item\" key={index}>\r\n                  <div className=\"banner__item-name mb-1\">{item.name}</div>\r\n                  <div className=\"banner__container\">\r\n                    <div className=\"banner__image banner__image_sm\">\r\n                      <Image\r\n                        src={BaseUrlWithoutApi + item.imagePath}\r\n                        alt={\"banner\" + index}\r\n                        width={400}\r\n                        height={200}\r\n                      />\r\n                    </div>\r\n                    <div className=\"banner__tools\">\r\n                      <button\r\n                        onClick={() => handleRemoveBanner(item.id)}\r\n                        className=\"banner__btn banner__delete-btn\"\r\n                      >\r\n                        <DeleteIcon size={24} />\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n          </div>\r\n        </div>\r\n      </MainLayout>\r\n    </Page>\r\n  );\r\n};\r\n","import { Link } from \"@components\";\r\nimport { Paths } from \"@constants\";\r\nimport { ICategories } from \"@interfaces\";\r\nimport classNames from \"classnames\";\r\n\r\ninterface IProps {\r\n  list: ICategories[];\r\n  activeId: string | null;\r\n  onSetActive: (id: string | null) => void;\r\n}\r\n\r\nconst Categories: React.FC<IProps> = (props): JSX.Element => {\r\n  return (\r\n    <div className=\"categories\">\r\n      {props.list.map((category) => (\r\n        <Link\r\n          className={classNames(\r\n            \"categories__item\",\r\n            props.activeId === category.id && \"categories__item_active\"\r\n          )}\r\n          key={category.id}\r\n          to={Paths.editCategory + \"/\" + category.id}\r\n          onHover={() => props.onSetActive(category?.id)}\r\n        >\r\n          {category.name}\r\n        </Link>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n","import React from \"react\";\r\nimport { ICategories } from \"@interfaces\";\r\nimport { KeyboardArrowDownIcon } from \"@icons\";\r\nimport classNames from \"classnames\";\r\nimport { Link } from \"@components\";\r\nimport { Paths } from \"@constants\";\r\n\r\ninterface IProps {\r\n  id: string | null;\r\n  title: string;\r\n  list: ICategories[] | undefined;\r\n}\r\n\r\nconst SubSubCategories: React.FC<IProps> = (props): JSX.Element => {\r\n  const [showMore, setShowMore] = React.useState<boolean>(false);\r\n\r\n  if (!props.list) return <></>;\r\n  return (\r\n    <div className=\"subsubcategories\">\r\n      <Link\r\n        to={Paths.editCategory + \"/\" + props.id}\r\n        className=\"subsubcategories__title\"\r\n      >\r\n        {props.title}\r\n      </Link>\r\n      <div className=\"subsubcategories__list\">\r\n        {props.list\r\n          .slice(0, showMore ? props.list.length : 5)\r\n          .map((subsubcat) => (\r\n            <Link\r\n              to={Paths.editCategory + \"/\" + subsubcat.id}\r\n              className=\"subsubcategories__item\"\r\n              key={subsubcat.id}\r\n            >\r\n              {subsubcat.name}\r\n            </Link>\r\n          ))}\r\n      </div>\r\n      {props.list.length > 5 && (\r\n        <button\r\n          className={classNames(\r\n            \"categories-showmore\",\r\n            showMore && \"categories-showmore_active\"\r\n          )}\r\n          onClick={() => setShowMore(!showMore)}\r\n        >\r\n          Ещё\r\n          <div className=\"categories-showmore__icon\">\r\n            <KeyboardArrowDownIcon size={18} />\r\n          </div>\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubSubCategories;\r\n","import React from \"react\";\r\nimport { ISubCategories } from \"@interfaces\";\r\nimport CategoriesSubSubList from \"./subSubCategories\";\r\n\r\ninterface IProps {\r\n  list: ISubCategories[] | undefined;\r\n}\r\n\r\nconst SubCategories: React.FC<IProps> = (props): JSX.Element => {\r\n  if (!props.list) return <></>;\r\n  return (\r\n    <div className=\"subcategories\">\r\n      {props.list.map((item) => (\r\n        <CategoriesSubSubList\r\n          id={item?.id}\r\n          key={item.id}\r\n          title={item.name}\r\n          list={item.subCategories}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubCategories;\r\n","import React from \"react\";\r\nimport { MainLayout } from \"@layouts\";\r\nimport CategoriesRoot from \"./categories\";\r\nimport SubCategories from \"./subCategories\";\r\nimport { Link, Page } from \"@components\";\r\nimport { AppPaths } from \"@constants\";\r\nimport { categoryControllers } from \"@controllers\";\r\nimport { useAppDispatch, useAppSelector } from \"@store\";\r\n\r\nexport const Categories: React.FC = (): JSX.Element => {\r\n  const [activeId, setActiveId] = React.useState<string | null>(null);\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const { data, pending } = useAppSelector((state) => state.category);\r\n\r\n  React.useEffect(() => {\r\n    dispatch(categoryControllers.get());\r\n  }, [dispatch]);\r\n\r\n  React.useEffect(() => {\r\n    if (!data[0]) return;\r\n    setActiveId(data[0].id);\r\n  }, [data]);\r\n\r\n  return (\r\n    <Page title=\"Категории\">\r\n      <MainLayout>\r\n        <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n          <h1 className=\"title\">Категории</h1>\r\n          <Link to={AppPaths.addCategory} className=\"button button-primary\">\r\n            Добавить категорию\r\n          </Link>\r\n        </div>\r\n        <div className=\"categoriesRoot\">\r\n          {!pending && (\r\n            <>\r\n              <CategoriesRoot\r\n                list={data.map((i) => ({ id: i.id, name: i.name }))}\r\n                activeId={activeId}\r\n                onSetActive={setActiveId}\r\n              />\r\n              <SubCategories\r\n                list={data.find((i) => i.id === activeId)?.subCategories}\r\n              />\r\n            </>\r\n          )}\r\n        </div>\r\n      </MainLayout>\r\n    </Page>\r\n  );\r\n};\r\n","import { Line } from \"@components\";\r\n\r\nexport const CharacteristicsSkeleton = () => {\r\n  return (\r\n    <>\r\n      <Line width=\"100%\" height={45} radius={4} />\r\n      <Line width=\"100%\" height={45} radius={4} />\r\n      <Line width=\"100%\" height={45} radius={4} />\r\n      <Line width=\"100%\" height={45} radius={4} />\r\n      <Line width=\"100%\" height={45} radius={4} />\r\n      <Line width=\"100%\" height={45} radius={4} />\r\n      <Line width=\"100%\" height={45} radius={4} />\r\n    </>\r\n  );\r\n};\r\n","import { Line } from \"@components\";\r\n\r\nexport const DeliveryTypesSkeleton = () => {\r\n  return (\r\n    <>\r\n      <Line width=\"100%\" height={45} radius={4} />\r\n      <Line width=\"100%\" height={45} radius={4} />\r\n      <Line width=\"100%\" height={45} radius={4} />\r\n      <Line width=\"100%\" height={45} radius={4} />\r\n      <Line width=\"100%\" height={45} radius={4} />\r\n      <Line width=\"100%\" height={45} radius={4} />\r\n      <Line width=\"100%\" height={45} radius={4} />\r\n    </>\r\n  );\r\n};\r\n","import { Line } from \"@components\";\r\n\r\nexport const ProductsSkeleton = () => {\r\n  return (\r\n    <div className=\"products-skeletons\">\r\n      <Line width=\"100%\" height={145} radius={4} />\r\n      <Line width=\"100%\" height={145} radius={4} />\r\n      <Line width=\"100%\" height={145} radius={4} />\r\n      <Line width=\"100%\" height={145} radius={4} />\r\n      <Line width=\"100%\" height={145} radius={4} />\r\n      <Line width=\"100%\" height={145} radius={4} />\r\n      <Line width=\"100%\" height={145} radius={4} />\r\n      <Line width=\"100%\" height={145} radius={4} />\r\n      <Line width=\"100%\" height={145} radius={4} />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link, Page } from \"@components\";\r\nimport { MainLayout } from \"@layouts\";\r\nimport { IDeliveryType } from \"@interfaces\";\r\nimport { AppPaths } from \"@constants\";\r\nimport { useAppDispatch, useAppSelector } from \"@store\";\r\nimport { deliveryTypeControllers } from \"@controllers\";\r\nimport { DeliveryTypesSkeleton } from \"@skeletons\";\r\n\r\nexport const DeliveryType: React.FC = (): JSX.Element => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const { data, pending } = useAppSelector((state) => state.deliveryType);\r\n\r\n  const handleRemoveBanner = React.useCallback(\r\n    (id: string) => {\r\n      dispatch(deliveryTypeControllers.delete(id));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    dispatch(deliveryTypeControllers.get());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Page title=\"Способы доставки\">\r\n      <MainLayout>\r\n        <div className=\"deliveryType\">\r\n          <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n            <h1 className=\"title\">Способы доставки</h1>\r\n            <Link\r\n              to={AppPaths.addDeliveryType}\r\n              className=\"button button-primary\"\r\n            >\r\n              Добавить способ доставки\r\n            </Link>\r\n          </div>\r\n          <div className=\"deliveryType__list\">\r\n            {pending && <DeliveryTypesSkeleton />}\r\n            {!pending &&\r\n              data.map((item: IDeliveryType) => (\r\n                <div className=\"deliveryType__item\" key={item.id}>\r\n                  <div className=\"deliveryType__item-info\">\r\n                    <div className=\"deliveryType__item-name\">{item.name}</div> –\r\n                    <div className=\"deliveryType__item-price\">\r\n                      {item.price} с.\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"deliveryType__item-tools\">\r\n                    <Link\r\n                      to={AppPaths.editDeliveryType + \"/\" + item.id}\r\n                      className=\"deliveryType__item-edit\"\r\n                    >\r\n                      редактировать\r\n                    </Link>\r\n                    <button\r\n                      className=\"deliveryType__item-delete\"\r\n                      onClick={() => handleRemoveBanner(item.id)}\r\n                    >\r\n                      удалить\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n          </div>\r\n        </div>\r\n      </MainLayout>\r\n    </Page>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link, Page, Pagination, Search } from \"@components\";\r\nimport { MainLayout } from \"@layouts\";\r\nimport { useAppDispatch, useAppSelector } from '@store';\r\nimport { usersControllers } from '@controllers';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { IUserItem, IUsersParams } from '@interfaces';\r\nimport { AppPaths } from '@constants';\r\nimport { QueryToObject, QueryToString } from '@functions';\r\nimport { DeliveryTypesSkeleton } from '@skeletons';\r\n\r\nconst initialParams: IUsersParams = {\r\n  page: 1,\r\n  query: \"\"\r\n};\r\n\r\nexport const Users: React.FC = (): JSX.Element => {\r\n\r\n  const dispatch = useAppDispatch()\r\n\r\n  const [params, setParams] = React.useState<IUsersParams>(initialParams);\r\n\r\n  const { data, pending, pageCount } = useAppSelector((state) => state.users);\r\n  const { roleName } = useAppSelector((state) => state.user);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleSetParams = (\r\n    state: keyof IUsersParams,\r\n    value: number | string\r\n  ): void => {\r\n    setParams((prev) => ({ ...prev, [state]: value }));\r\n  };\r\n\r\n  const handleChangeRole = React.useCallback((roleId, id) => {\r\n    dispatch(usersControllers.edit(params, roleId, id ));\r\n  }, [dispatch, params])\r\n\r\n  React.useEffect(() => {\r\n    if (!params) return;\r\n    navigate(AppPaths.users + \"?\" + QueryToString(params));\r\n    dispatch(usersControllers.get(params));\r\n  }, [navigate, dispatch, params]);\r\n\r\n  React.useMemo(() => {\r\n    const urlParams = QueryToObject();\r\n\r\n    setParams({\r\n      page: Number(urlParams.page || initialParams.page),\r\n      query: urlParams.query || initialParams.query\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Page title=\"Пользователи\">\r\n      <MainLayout>\r\n        <div className=\"users\">\r\n          <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n            <h1 className=\"title\">Пользователи</h1>\r\n          </div>\r\n          <Search\r\n            className=\"products__search mb-2\"\r\n            value={params?.query || \"\"}\r\n            onChange={(v: string) => handleSetParams(\"query\", v)}\r\n            placeholder=\"Поиск по имени\"\r\n          />\r\n          <div className=\"deliveryType__list\">\r\n            {pending && <DeliveryTypesSkeleton />}\r\n            {!pending &&\r\n              data.map((item: IUserItem) => (\r\n                <div className=\"user__item\" key={item.id}>\r\n                  <Link to={'/users/'+item.id} className=\"user__item-info\">\r\n                    <div className=\"user__item-name\">\r\n                      <span>{item.firstName}</span> \r\n                      <span>{item.lastName}</span> \r\n                    </div>\r\n                  </Link>\r\n                  {roleName === 1 && \r\n                    <div className=\"user__item-tools\">\r\n                      <Dropdown id={item.id} roleName={item.roleName} onChange={handleChangeRole} />\r\n                    </div>\r\n                  }\r\n                </div>\r\n              ))}\r\n          </div>\r\n          <Pagination\r\n            className=\"products__pagination mt-2\"\r\n            page={Number(params?.page || 1)}\r\n            totalPages={pageCount}\r\n            onPageChange={(p: number) =>\r\n              handleSetParams(\"page\", p)\r\n            }\r\n          />\r\n        </div>\r\n      </MainLayout>\r\n    </Page>\r\n  );\r\n};\r\n\r\nconst Dropdown: React.FC<{\r\n  id: string;\r\n  roleName: string,\r\n  onChange: (roleId: number, id: string) => void\r\n}> = (props) => {\r\n  const [open, setOpen] = React.useState<boolean>(false);\r\n\r\n  React.useEffect(() => {\r\n    const handleClickOutside = (e: any) => {\r\n      if (!e.target.closest('#userToolsDropdown-'+props.id))\r\n        setOpen(false)\r\n    }\r\n    window.addEventListener('click', handleClickOutside);\r\n    return () => window.removeEventListener('click', handleClickOutside);\r\n  }, [props.id]);\r\n\r\n  return (\r\n    <div id={\"userToolsDropdown-\"+props.id} className=\"userToolsDropdown\">\r\n\r\n    <button className=\"userToolsDropdown__label\" onClick={() => setOpen(!open)}>\r\n      {props.roleName}\r\n    </button>\r\n\r\n    {open && \r\n      <div className=\"userToolsDropdown__menu\">\r\n        <button className=\"userToolsDropdown__item\" onClick={() => {\r\n          setOpen(false)\r\n          props.onChange(2, props.id)\r\n        }}>\r\n          Администратор\r\n        </button>\r\n        <button className=\"userToolsDropdown__item\" onClick={() => {\r\n          setOpen(false)\r\n          props.onChange(3, props.id)\r\n        }}>\r\n          Пользователь\r\n        </button>\r\n      </div>\r\n    }\r\n\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\nimport { Page } from '@components'\r\nimport { MainLayout } from '@layouts'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useAppDispatch, useAppSelector } from '@store'\r\nimport { usersControllers } from '@controllers'\r\n\r\nexport const UserById = () => {\r\n\r\n\tconst dispatch = useAppDispatch()\r\n\tconst { id } = useParams()\r\n\tconst { dataById } = useAppSelector(state => state.users)\r\n\r\n\tReact.useEffect(() => {\r\n\t\tif (!id) return \r\n\t\tdispatch(usersControllers.getById(id))\r\n\t}, [dispatch, id])\r\n\r\n\treturn (\r\n    <Page title={\"Пользователь - \" + id}>\r\n      <MainLayout>\r\n\t\t\t\t<div className='user'>\r\n\t\t\t\t\t{dataById?.name &&\r\n\t\t\t\t\t\t<div className=\"user__info\">\r\n\t\t\t\t\t\t\t<div className=\"user__title\">\r\n\t\t\t\t\t\t\t\tИмя\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='user__value'>\r\n\t\t\t\t\t\t\t\t{dataById?.name}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{dataById?.lastName &&\r\n\t\t\t\t\t\t<div className=\"user__info\">\r\n\t\t\t\t\t\t\t<div className=\"user__title\">\r\n\t\t\t\t\t\t\t\tФамилия\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='user__value'>\r\n\t\t\t\t\t\t\t\t{dataById?.lastName}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{dataById?.email && \r\n\t\t\t\t\t\t<div className=\"user__info\">\r\n\t\t\t\t\t\t\t<div className=\"user__title\">\r\n\t\t\t\t\t\t\t\tПочта\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='user__value'>\r\n\t\t\t\t\t\t\t\t{dataById?.email}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{dataById?.address && \r\n\t\t\t\t\t\t<div className=\"user__info\">\r\n\t\t\t\t\t\t\t<div className=\"user__title\">\r\n\t\t\t\t\t\t\t\tАдрес\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='user__address'>\r\n\t\t\t\t\t\t\t\t{dataById?.address}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{dataById?.phone && \r\n\t\t\t\t\t\t<div className=\"user__info\">\r\n\t\t\t\t\t\t\t<div className=\"user__title\">\r\n\t\t\t\t\t\t\t\tТелефон\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='user__value'>\r\n\t\t\t\t\t\t\t\t{dataById?.phone}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n      </MainLayout>\r\n    </Page>\r\n\t)\r\n}","import { Link } from \"@components\";\r\nimport { AppPaths } from \"@constants\";\r\nimport { characteristicControllers } from \"@controllers\";\r\nimport { KeyboardArrowDownIcon } from \"@icons\";\r\nimport { ICharacteristicValue, ICharacteristicWithValue } from \"@interfaces\";\r\nimport { useAppDispatch } from \"@store\";\r\nimport classNames from \"classnames\";\r\nimport React from \"react\";\r\n\r\ninterface IProps extends ICharacteristicWithValue {}\r\n\r\nexport const Characteristic: React.FC<IProps> = (props): JSX.Element => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const menu = React.useRef<HTMLDivElement | null>(null);\r\n  const [open, setOpen] = React.useState<boolean>(false);\r\n  const [menuHeight, setMenuHeight] = React.useState<number>(0);\r\n\r\n  const handleDeleteCharacteristic = React.useCallback(() => {\r\n    dispatch(characteristicControllers.delete(props.id));\r\n  }, [dispatch, props.id]);\r\n\r\n  const handleDeleteValue = React.useCallback(\r\n    (id: string) => {\r\n      dispatch(characteristicControllers.deleteValue(id));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    if (menu.current) {\r\n      setMenuHeight(menu.current.clientHeight + 20);\r\n    }\r\n  }, [menu, props.values]);\r\n\r\n  return (\r\n    <div className={classNames(\"accordion\", open && \"accordion_open\")}>\r\n      <div className=\"deliveryType__item\">\r\n        <button\r\n          onClick={() => setOpen(!open)}\r\n          className={\"deliveryType__item-info\"}\r\n        >\r\n          <div className=\"deliveryType__item-name\">{props.name}</div>\r\n          {props.values.length !== 0 && (\r\n            <div className=\"deliveryType__item-arrow\">\r\n              <KeyboardArrowDownIcon size={21} />\r\n            </div>\r\n          )}\r\n        </button>\r\n        <div className=\"deliveryType__item-tools\">\r\n          <Link\r\n            to={AppPaths.addCharacteristicsValue + \"/\" + props.id}\r\n            className=\"deliveryType__item-edit\"\r\n          >\r\n            добавить значение\r\n          </Link>\r\n          <Link\r\n            to={AppPaths.editCharacteristic + \"/\" + props.id}\r\n            className=\"deliveryType__item-edit\"\r\n          >\r\n            редактировать\r\n          </Link>\r\n          <button\r\n            className=\"deliveryType__item-delete\"\r\n            onClick={handleDeleteCharacteristic}\r\n          >\r\n            удалить\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {props.values.length !== 0 && (\r\n        <div\r\n          className=\"accordion__menu\"\r\n          style={{ height: open ? menuHeight + \"px\" || \"0px\" : \"0px\" }}\r\n        >\r\n          <div className=\"accordion__menu-wrap\" ref={menu}>\r\n            <div className=\"characteristic-values\">\r\n              {props.values.map(\r\n                (item: Omit<ICharacteristicValue, \"characteristicId\">) => (\r\n                  <div\r\n                    className=\"characteristic-value accordion__menu-item\"\r\n                    key={item.id}\r\n                  >\r\n                    <div className=\"characteristic-value__name\">\r\n                      {item.value}\r\n                    </div>\r\n                    <Link\r\n                      to={AppPaths.editCharacteristicValue + \"/\" + item.id}\r\n                      className=\"characteristic-edit link\"\r\n                    >\r\n                      редактировать\r\n                    </Link>\r\n                    <button\r\n                      className=\"characteristic-delete link\"\r\n                      onClick={() => handleDeleteValue(item.id)}\r\n                    >\r\n                      удалить\r\n                    </button>\r\n                  </div>\r\n                )\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link, Page } from \"@components\";\r\nimport { MainLayout } from \"@layouts\";\r\nimport { ICharacteristicWithValue } from \"@interfaces\";\r\nimport { AppPaths } from \"@constants\";\r\nimport { Characteristic } from \"./Characteristic\";\r\nimport { useAppDispatch, useAppSelector } from \"@store\";\r\nimport { characteristicControllers } from \"@controllers\";\r\nimport { CharacteristicsSkeleton } from \"@skeletons\";\r\n\r\nexport const Characteristics: React.FC = (): JSX.Element => {\r\n  const dispatch = useAppDispatch();\r\n  const { dataWithValue, pending } = useAppSelector(\r\n    (state) => state.characteristic\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    dispatch(characteristicControllers.getWithValues());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Page title=\"Характеристки\">\r\n      <MainLayout>\r\n        <div className=\"deliveryType\">\r\n          <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n            <h1 className=\"title\">Характеристики</h1>\r\n            <Link\r\n              to={AppPaths.addCharacteristics}\r\n              className=\"button button-primary\"\r\n            >\r\n              Добавить характеристику\r\n            </Link>\r\n          </div>\r\n          <div className=\"deliveryType__list\">\r\n            {pending && <CharacteristicsSkeleton />}\r\n            {!pending &&\r\n              dataWithValue.map((item: ICharacteristicWithValue) => (\r\n                <Characteristic\r\n                  key={item.id}\r\n                  id={item.id}\r\n                  name={item.name}\r\n                  values={item.values}\r\n                />\r\n              ))}\r\n          </div>\r\n        </div>\r\n      </MainLayout>\r\n    </Page>\r\n  );\r\n};\r\n","import { MouseEventHandler, useEffect, useState } from \"react\";\n\nimport axios from \"axios\";\nimport { ICategory } from \"@interfaces\";\nimport { useAppDispatch } from \"@store\";\nimport { setStatuses } from \"@store/slice\";\nimport { useDispatch } from \"react-redux\";\nimport { Switch } from \"./Switch\";\nimport { BaseUrl } from \"@utils/BaseUrl\";\n\ninterface IProps {\n  onChange: (value: string) => void;\n}\n\nexport const ProductsFilter: React.FC<IProps> = ({ onChange }): JSX.Element => {\n  const [categoriesState, setCategoriesState] = useState<ICategory[]>([]);\n  const [checkedId, setCheckedId] = useState<string>(\"\");\n  const [categoryStatuses, setCategoryStatuses] = useState<any>([]);\n\n  const dispatch = useAppDispatch();\n\n  const getCategories = async () => {\n    const response = await axios.get(\n      process.env.REACT_APP_BASE_URL + \"/categories\"\n    );\n\n    const categories = response.data;\n\n    categories.forEach((category: any) => {\n      setCategoryStatuses((prev: any) => ({\n        ...prev,\n        [category.id]: {\n          loaded: false,\n        },\n      }));\n    });\n\n    dispatch(setStatuses(categoryStatuses));\n    setCategoriesState(categories);\n  };\n\n  useEffect(() => {\n    getCategories();\n  }, []);\n\n  const handleItemClick = (e: any) => {\n    const id = e.target.getAttribute(\"data-id\");\n    setCheckedId(id);\n  };\n\n  useEffect(() => {\n    onChange(checkedId);\n  }, [checkedId]);\n\n  const handleDownloadCategory: MouseEventHandler<HTMLDivElement> = (event) => {\n    axios.get(BaseUrl + \"/product/dowloandexceldocument?id=\" + checkedId);\n  };\n\n  return (\n    <div className=\"categories-filter\">\n      <h3 className=\"categories-filter__title\">Категории</h3>\n      <div className=\"categories-filter__list\">\n        <div\n          className={`categories-filter__item ${!checkedId ? \"active\" : \"\"}`}\n          onClick={handleItemClick}\n          data-id={\"\"}\n        >\n          Все\n        </div>\n        {categoriesState.map((category: any) => {\n          return (\n            <div\n              className={`categories-filter__item ${\n                category.id === checkedId ? \"active\" : \"\"\n              }`}\n              onClick={handleItemClick}\n              key={category.id}\n              data-id={category.id}\n            >\n              {category.name}\n            </div>\n          );\n        })}\n        <a\n          className={`categories-filter__item ${!checkedId ? \"active\" : \"\"}`}\n          // onClick={handleDownloadCategory}\n          style={{\n            backgroundColor: \"green\",\n            color: \"#fff\",\n          }}\n          href={BaseUrl + \"/product/dowloandexceldocument?id=\" + checkedId}\n        >\n          Скачать как Excel файл\n        </a>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Link, Page, Pagination, Prodcard, Search } from \"@components\";\nimport { MainLayout } from \"@layouts\";\nimport { IProductsParams, IProduct } from \"@interfaces\";\nimport { AppPaths } from \"@constants\";\nimport { QueryToString, QueryToObject } from \"@functions\";\nimport { useAppDispatch, useAppSelector } from \"@store\";\nimport { productControllers } from \"@controllers\";\nimport { ProductsSkeleton } from \"@skeletons\";\nimport { ProductsFilter } from \"views/components/ProductsFilter\";\nimport { shallowEqual } from \"react-redux\";\n\nconst initialParams: IProductsParams = {\n  pageNumber: 1,\n  query: \"\",\n};\n\nexport const Products: React.FC = (): JSX.Element => {\n  const dispatch = useAppDispatch();\n\n  const { data, pending, paginationPending, pageCount, statuses } =\n    useAppSelector((state) => state.product, shallowEqual);\n\n  const navigate = useNavigate();\n\n  const [params, setParams] = React.useState<IProductsParams | null>(null);\n\n  const handleSetParams = (\n    state: keyof IProductsParams,\n    value: string | number\n  ): void => {\n    setParams((prev) => ({ ...prev, [state]: value }));\n  };\n\n  const handleDeleteProduct = React.useCallback(\n    async (id: string) => {\n      if (!params) return;\n      dispatch(productControllers.delete(id));\n      dispatch(productControllers.get(params));\n    },\n    [dispatch, params]\n  );\n\n  React.useEffect(() => {\n    if (!params) return;\n    navigate(AppPaths.products + \"?\" + QueryToString(params));\n  }, [navigate, params]);\n\n  React.useMemo(() => {\n    const urlParams = QueryToObject();\n\n    setParams({\n      pageNumber: Number(urlParams.pageNumber || initialParams.pageNumber),\n      query: urlParams.query || initialParams.query,\n    });\n  }, []);\n\n  React.useEffect(() => {\n    if (!params) return;\n    dispatch(productControllers.get(params, { statuses, data, pageCount }));\n  }, [dispatch, params]);\n\n  const handleFilterChange = (id: string) => {\n    setParams((prev) => ({\n      ...prev,\n      categoryId: id,\n      pageNumber: 1,\n    }));\n  };\n\n  return (\n    <Page title=\"Продукты\">\n      <MainLayout>\n        <div className=\"products\">\n          <div className=\"d-flex justify-content-between align-items-center mb-3\">\n            <h1 className=\"title\">Продукты</h1>\n            <Link to={AppPaths.addProduct} className=\"button button-primary\">\n              Добавить продукт\n            </Link>\n          </div>\n          <div className=\"products__tools\">\n            <Search\n              className=\"products__search\"\n              value={params?.query || \"\"}\n              onChange={(v: string) => handleSetParams(\"query\", v)}\n              placeholder=\"Поиск по имени, цене\"\n            />\n          </div>\n\n          <ProductsFilter onChange={handleFilterChange} />\n\n          {pending && <ProductsSkeleton />}\n          {!pending && (\n            <div\n              className=\"products__list\"\n              style={(!data.length && { justifyContent: \"center\" }) || {}}\n            >\n              {data.length ? (\n                data.map((item: IProduct) => (\n                  <Prodcard\n                    key={item.id}\n                    id={item.id}\n                    isNew={item.isNew}\n                    discount={item.discount}\n                    imgSrc={item.images && item.images[0]}\n                    name={item.name}\n                    price={item.price}\n                    isHidden={item.hideProduct}\n                    date={item.productDate}\n                    onDelete={() => handleDeleteProduct(item.id)}\n                  />\n                ))\n              ) : (\n                <h3>По вашему запросу пока ничего нет.</h3>\n              )}\n            </div>\n          )}\n          <Pagination\n            className=\"products__pagination mt-2\"\n            page={Number(params?.page || 1)}\n            totalPages={pageCount}\n            onPageChange={(p: number) => handleSetParams(\"page\", p)}\n          />\n        </div>\n      </MainLayout>\n    </Page>\n  );\n};\n","import React from \"react\";\r\nimport { Image, Link, Page } from \"@components\";\r\nimport { MainLayout } from \"@layouts\";\r\nimport { AppPaths } from \"@constants\";\r\nimport { DeleteIcon, EditIcon } from \"@icons\";\r\nimport { useAppDispatch, useAppSelector } from \"@store\";\r\nimport { paymentTypesControllers } from \"@controllers\";\r\nimport { BaseUrlWithoutApi } from \"@utils/BaseUrl\";\r\n\r\nexport const PaymentTypes: React.FC = (): JSX.Element => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const { data, pending } = useAppSelector((state) => state.paymentTypes);\r\n\r\n  const handleRemovePaymentType = React.useCallback(\r\n    (id: string) => {\r\n      dispatch(paymentTypesControllers.delete(id));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    dispatch(paymentTypesControllers.get());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Page title=\"Способы оплаты\">\r\n      <MainLayout>\r\n        <div className=\"banners\">\r\n          <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n            <h1 className=\"title\">Способы оплаты</h1>\r\n            <Link\r\n              to={AppPaths.addPaymentType}\r\n              className=\"button button-primary\"\r\n            >\r\n              Добавить способ оплаты\r\n            </Link>\r\n          </div>\r\n          <div className=\"banner__list\">\r\n            {!pending &&\r\n              data.map((item, index) => (\r\n                <div className=\"banner__item\" key={index}>\r\n                  <div className=\"banner__item-name mb-1\">{item.name}</div>\r\n                  <div className=\"banner__container\">\r\n                    <div className=\"banner__image banner__image_sm\">\r\n                      <Image\r\n                        src={BaseUrlWithoutApi + item.imagePath}\r\n                        alt={\"banner\" + index}\r\n                        width={200}\r\n                        height={200}\r\n                      />\r\n                    </div>\r\n                    <div className=\"banner__tools\">\r\n                      <button\r\n                        onClick={() => handleRemovePaymentType(item.id)}\r\n                        className=\"banner__btn banner__delete-btn\"\r\n                      >\r\n                        <DeleteIcon size={24} />\r\n                      </button>\r\n                      <Link\r\n                        to={AppPaths.editPaymentType + \"/\" + item.id}\r\n                        className=\"banner__btn banner__edit-btn\"\r\n                      >\r\n                        <EditIcon size={24} />\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"banner__item-description mb-1\">\r\n                    {item.description}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n          </div>\r\n        </div>\r\n      </MainLayout>\r\n    </Page>\r\n  );\r\n};\r\n","import React from \"react\";\nimport { Link, Page, Pagination } from \"@components\";\nimport { MainLayout } from \"@layouts\";\nimport { useAppDispatch, useAppSelector } from \"@store\";\nimport { ordersControllers } from \"@controllers\";\nimport { DeliveryTypesSkeleton } from \"@skeletons\";\nimport { IOrder, IOrdersParams } from \"@interfaces\";\nimport classNames from \"classnames\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AppPaths } from \"@constants\";\nimport { QueryToObject, QueryToString } from \"@functions\";\n\nconst initialParams: IOrdersParams = {\n  page: 1,\n};\n\nexport const Orders: React.FC = (): JSX.Element => {\n  const dispatch = useAppDispatch();\n\n  const [params, setParams] = React.useState<IOrdersParams | null>(null);\n\n  const { data, pending, pageCount } = useAppSelector((state) => state.orders);\n\n  const navigate = useNavigate();\n\n  const handleApprove = React.useCallback(\n    (item: IOrder) => {\n      dispatch(ordersControllers.edit({ ...item, orderStatusId: 2 }));\n    },\n    [dispatch]\n  );\n\n  const handleReject = React.useCallback(\n    (item: IOrder) => {\n      dispatch(ordersControllers.edit({ ...item, orderStatusId: 3 }));\n    },\n    [dispatch]\n  );\n\n  const handleSetParams = (state: keyof IOrdersParams, value: number): void => {\n    setParams((prev) => ({ ...prev, [state]: value }));\n  };\n\n  React.useEffect(() => {\n    if (!params) return;\n    navigate(AppPaths.orders + \"?\" + QueryToString(params));\n    dispatch(ordersControllers.get(params));\n  }, [navigate, params, dispatch]);\n\n  React.useMemo(() => {\n    const urlParams = QueryToObject();\n\n    setParams({\n      page: Number(urlParams.page || initialParams.page),\n    });\n  }, []);\n\n  return (\n    <Page title=\"Список заказов\">\n      <MainLayout>\n        <div className=\"deliveryType\">\n          <div className=\"d-flex justify-content-between align-items-center mb-3\">\n            <h1 className=\"title\">Заказы</h1>\n          </div>\n          <div className=\"myTable\">\n            {pending && <DeliveryTypesSkeleton />}\n            <div className=\"myTableRowHead\">\n              <div className='myTableRow__grid'>\n                <div className=\"deliveryType__item-name\">\n                  Номер телефона\n                </div>\n                <div className=\"deliveryType__item-name\">\n                  Способ доставки\n                </div>\n                <div className=\"deliveryType__item-name\">\n                  Способ оплаты\n                </div>\n                <div className=\"deliveryType__item-name\">\n                  Дата\n                </div>\n                <div className=\"deliveryType__item-name\">\n                  Сумма\n                </div>\n              </div>\n              <div className=\"tempDiv\"></div>\n            </div>\n            {!pending &&\n              data.map((item: IOrder) => (\n                <div className=\"myTableRow\" key={item.orderId}>\n                  <Link\n                    to={\"/orders/\" + item.orderId}\n                    className=\"deliveryType__item-info\"\n                  >\n                    <div className=\"deliveryType__item-name\">\n                      {`${\n                        `${item.phoneNumber}`.indexOf(\"+\") === -1 ? \"+\" : \"\"\n                      }${item.phoneNumber}`.replaceAll(\" \", \"\")}\n                    </div>\n                    <div className=\"deliveryType__item-name\">\n                      {item.deliveryTypeId}\n                    </div>\n                    <div className=\"deliveryType__item-name\">\n                      {item.paymentTypeId}\n                    </div>\n                    <div className=\"deliveryType__item-name\">\n                      {new Date(item.orderAt).toLocaleDateString()}\n                    </div>\n                    <div className=\"deliveryType__item-name\">\n                      {item.type.reduce((acc, cur) => acc + (cur.price - (cur.price / 100 * cur.discount)) * cur.count, 0)}\n                    </div>\n                  </Link>\n                  <div className=\"deliveryType__item-tools\">\n                    <button\n                      onClick={() => handleApprove(item)}\n                      className={classNames(\n                        \"deliveryType__item-success deliveryType__item-staticBtn\",\n                        (item.orderStatusId === \"Одобрено\" || item.orderStatusId === 2) && \"deliveryType__item-success__disabled\"\n                      )}\n                    >\n                      {(item.orderStatusId === \"Одобрено\" || item.orderStatusId === 2) ? \"Одобрено\" : \"Одобрить\"}\n                    </button>\n                    <button\n                      onClick={() => handleReject(item)}\n                      className={classNames(\n                        \"deliveryType__item-delete deliveryType__item-staticBtn\",\n                        (item.orderStatusId === \"Отказано\" || item.orderStatusId === 3) && \"deliveryType__item-delete__disabled\"\n                      )}\n                    >\n                      {(item.orderStatusId === \"Отказано\" || item.orderStatusId === 3) ? \"Отказано\" : \"Отказать\"}\n                    </button>\n                  </div>\n                </div>\n              ))}\n          </div>\n          <Pagination\n            className=\"products__pagination mt-2\"\n            page={Number(params?.page || 1)}\n            totalPages={pageCount}\n            onPageChange={(p: number) => handleSetParams(\"page\", p)}\n          />\n        </div>\n      </MainLayout>\n    </Page>\n  );\n};\n","import { Page } from \"@components\";\r\nimport { ordersControllers } from \"@controllers\";\r\nimport { MainLayout } from \"@layouts\";\r\nimport { useAppDispatch, useAppSelector } from \"@store\";\r\nimport { BaseUrlWithoutApi } from '@utils/BaseUrl';\r\nimport classNames from \"classnames\";\r\nimport React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"./index.css\";\r\n\r\nexport const Order: React.FC = (): JSX.Element => {\r\n  const { id } = useParams();\r\n  const { orderById } = useAppSelector((state) => state.orders);\r\n  const dispatch = useAppDispatch();\r\n\r\n  React.useEffect(() => {\r\n    if (!id) return;\r\n    dispatch(ordersControllers.getById(id));\r\n  }, [id, dispatch]);\r\n\r\n  return (\r\n    <Page title={\"Заказ № \" + id}>\r\n      <MainLayout>\r\n        {orderById && (\r\n          <div className=\"order\">\r\n            <div className=\"order__item\">\r\n              <div className=\"order__title\">Имя заказчика</div>\r\n              <div className=\"order__value\">\r\n                {orderById.firstName} {orderById.lastName}\r\n              </div>\r\n            </div>\r\n            <div className=\"order__item\">\r\n              <div className=\"order__title\">Статус заказа</div>\r\n              <div\r\n                className={classNames(\r\n                  \"order__value\",\r\n                  orderById.orderStatus === \"Новый\" && \"order__value--new\",\r\n                  orderById.orderStatus === \"Отказано\" &&\r\n                    \"order__value--rejected\",\r\n                  orderById.orderStatus === \"Одобрено\" &&\r\n                    \"order__value--approved\"\r\n                )}\r\n              >\r\n                {orderById.orderStatus}\r\n              </div>\r\n            </div>\r\n            <div className=\"order__item\">\r\n              <div className=\"order__title\">Доставка</div>\r\n              <div className=\"order__value\">{orderById.deliveryType}</div>\r\n            </div>\r\n            <div className=\"order__item\">\r\n              <div className=\"order__title\">Номер телефона</div>\r\n              <div className=\"order__value\">{orderById?.phoneNumber}</div>\r\n            </div>\r\n            <div className=\"order__item\">\r\n              <div className=\"order__title\">Способ оплаты</div>\r\n              <div className=\"order__value\">{orderById.paymentType}</div>\r\n            </div>\r\n            <div className=\"order__item\">\r\n              <div className=\"order__title\">Дата заказа</div>\r\n              <div className=\"order__value\">\r\n                {new Date(orderById.orderAt).toLocaleDateString()}\r\n              </div>\r\n            </div>\r\n            <div className=\"order__text\">\r\n              <div className=\"order__title\">Примечание к заказу</div>\r\n              <div className=\"order__value\">\r\n                {orderById.description === \"\"\r\n                  ? \"Отсутсвует\"\r\n                  : orderById.description}\r\n              </div>\r\n            </div>\r\n            <table>\r\n              <tr>\r\n                <th>Превью</th>\r\n                <th>Название товара</th>\r\n                <th>Цена</th>\r\n                <th>Количество</th>\r\n                <th>Вендор-код</th>\r\n              </tr>\r\n              {orderById.type.map((product, index) => (\r\n                <tr key={product.vendorCode + index}>\r\n                  <td>\r\n                    <div className='myProductImageInOrder'>\r\n                      <img src={BaseUrlWithoutApi + product.imagePath} alt=\"\" />\r\n                    </div>\r\n                  </td>\r\n                  <td>{product.name}</td>\r\n                  <td>\r\n                    {product.price - (product.price * product.discount) / 100}{\" \"}\r\n                    с.\r\n                  </td>\r\n                  <td>{product.count}</td>\r\n                  <td>{product.vendorCode}</td>\r\n                </tr>\r\n              ))}\r\n            </table>\r\n            <div className=\"order__result\">\r\n              Итого:{\" \"}\r\n              {orderById.type.reduce(\r\n                (acc, item) =>\r\n                  acc +\r\n                  (item.price - (item.price * item.discount) / 100) *\r\n                    item.count,\r\n                0\r\n              )}{\" \"}\r\n              с.\r\n            </div>\r\n          </div>\r\n        )}\r\n      </MainLayout>\r\n    </Page>\r\n  );\r\n};\r\n","interface IProps {\r\n  name: string;\r\n  price: string;\r\n  vendorcode: string;\r\n  categoryId: string | null;\r\n  mainImage: File | string | null;\r\n}\r\n\r\nexport const addProductValidation = (props: IProps) => {\r\n  if (\r\n    (typeof props.mainImage === \"string\" && props.mainImage?.trim() === \"\") ||\r\n    !props.mainImage\r\n  )\r\n    return {\r\n      errorText: \"Продукт должен иметь главную картинку\",\r\n      isValid: false,\r\n    };\r\n  if (props.name.trim() === \"\")\r\n    return { errorText: \"Введите название продукта\", isValid: false };\r\n  if (props.price === \"0\")\r\n    return { errorText: \"Цена продукта не равняться нулю\", isValid: false };\r\n  if (props.vendorcode.trim() === \"0\")\r\n    return { errorText: \"Код обязателен\", isValid: false };\r\n  if (!props.categoryId || props.categoryId?.trim() === \"\")\r\n    return { errorText: \"Выберите категорию продукта\", isValid: false };\r\n\r\n  return { isValid: true };\r\n};\r\n","import React from \"react\";\r\nimport { DropdownMenu, Page, SubSubcategoriesMenu } from \"@components\";\r\nimport { MainLayout } from \"@layouts\";\r\nimport { ISelectedCharacteristic } from \"@interfaces\";\r\nimport { useAppDispatch, useAppSelector } from \"@store\";\r\nimport { CharacteristicsDropdown } from \"@components\";\r\nimport {\r\n  brandControllers,\r\n  categoryControllers,\r\n  characteristicControllers,\r\n  productControllers,\r\n} from \"@controllers\";\r\nimport { DeleteIcon } from \"@icons\";\r\nimport { addProductValidation } from \"@validations\";\r\nimport classNames from \"classnames\";\r\n\r\ninterface IFile {\r\n  id: string;\r\n  file: File;\r\n}\r\n\r\nexport const AddProduct: React.FC = (): JSX.Element => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const { pending } = useAppSelector((state) => state.product);\r\n  const categories = useAppSelector((state) => state.category);\r\n  const brands = useAppSelector((state) => state.brand);\r\n\r\n  const [errorText, setErrorText] = React.useState<string | null>(\"\");\r\n  const [name, setName] = React.useState<string>(\"\");\r\n  const [price, setPrice] = React.useState<string>(\"0\");\r\n  const [discount, setDiscount] = React.useState<string>(\"0\");\r\n  const [vendorcode, setVendorcode] = React.useState<string>(\"\");\r\n  const [description, setDescription] = React.useState<string>(\"\");\r\n  const [categoryId, setCategoryId] = React.useState<string | null>(null);\r\n  const [brand, setBrand] = React.useState<{ id: string; name: string } | null>(\r\n    null\r\n  );\r\n  const [characteristicsValues, setCharacteristicsValues] = React.useState<\r\n    ISelectedCharacteristic[]\r\n  >([]);\r\n  const [mainImage, setMainImage] = React.useState<File | null>(null);\r\n  const [imageList, setImageList] = React.useState<IFile[]>([]);\r\n\r\n  const handleAddProduct = React.useCallback(() => {\r\n    const validationResult = addProductValidation({\r\n      name,\r\n      price,\r\n      vendorcode,\r\n      categoryId,\r\n      mainImage,\r\n    });\r\n\r\n    setErrorText(validationResult.errorText || null);\r\n    if (!validationResult.isValid) return;\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"Name\", name);\r\n    formData.append(\"Price\", String(price));\r\n    formData.append(\"Discount\", String(discount));\r\n    formData.append(\"Vendorcode\", vendorcode);\r\n    formData.append(\"Description\", description);\r\n    formData.append(\"CategoryId\", categoryId || \"\");\r\n    formData.append(\"BrandId\", brand?.id || \"\");\r\n    formData.append(\"MainImage\", mainImage || \"\");\r\n    imageList.forEach((image) => {\r\n      formData.append(\"Images\", image.file || \"\");\r\n    });\r\n    characteristicsValues\r\n      .filter((item) => item.characteristic.id !== \"\" && item.value.id !== \"\")\r\n      .forEach((item) => {\r\n        formData.append(\"CharacteristicValueId\", item.value.id);\r\n      });\r\n\r\n    dispatch(productControllers.create(formData));\r\n  }, [\r\n    brand?.id,\r\n    categoryId,\r\n    characteristicsValues,\r\n    description,\r\n    discount,\r\n    dispatch,\r\n    imageList,\r\n    mainImage,\r\n    name,\r\n    price,\r\n    vendorcode,\r\n  ]);\r\n\r\n  const handleSelectMainImg = React.useCallback((files: FileList | null) => {\r\n    if (!files) return;\r\n    setMainImage(files[0]);\r\n  }, []);\r\n\r\n  const handleAddImage = React.useCallback((files: FileList | null) => {\r\n    if (!files) return;\r\n    setImageList((prev) => [\r\n      ...prev,\r\n      { file: files[0], id: String(new Date().valueOf()) },\r\n    ]);\r\n  }, []);\r\n\r\n  const handleRemoveImage = React.useCallback((id: string) => {\r\n    setImageList((prev) => prev.filter((item) => item.id !== id));\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    dispatch(categoryControllers.get());\r\n  }, [dispatch]);\r\n\r\n  React.useEffect(() => {\r\n    dispatch(brandControllers.get())\r\n  }, [dispatch]);\r\n\r\n  React.useEffect(() => {\r\n    dispatch(characteristicControllers.getWithValues())\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Page title=\"Добавить продукт\">\r\n      <MainLayout>\r\n        <h1 className=\"title mb-3\">Добавить продукт</h1>\r\n\r\n        <div className=\"form characteristics-form\">\r\n          <div className=\"form__label\">\r\n            <div className=\"form__label-name\">\r\n              Главная картинка\r\n              <span className=\"exact_star\">*</span>\r\n            </div>\r\n            {mainImage && (\r\n              <div className=\"banner__container mt-1\">\r\n                <div className=\"banner__image\">\r\n                  <img\r\n                    className=\"img\"\r\n                    src={URL.createObjectURL(mainImage)}\r\n                    alt=\"Выбранное изображение\"\r\n                  />\r\n                </div>\r\n                <div className=\"banner__tools\">\r\n                  <button\r\n                    className=\"banner__btn banner__delete-btn\"\r\n                    onClick={() => setMainImage(null)}\r\n                  >\r\n                    <DeleteIcon size={24} />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n            {!mainImage && (\r\n              <label className=\"add-btn add-btn_sm\">\r\n                <input\r\n                  id=\"inputfile\"\r\n                  className=\"d-none\"\r\n                  type=\"file\"\r\n                  onChange={(e) => handleSelectMainImg(e.target.files)}\r\n                />\r\n                Выбрать главную фотографию\r\n              </label>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"form__label\">\r\n            <div className=\"form__label-name\">Дополнительные фотографии</div>\r\n\r\n            <div className=\"d-flex direction-column gap-20 mt-1 mb-1\">\r\n              {imageList.map((item) => (\r\n                <div className=\"banner__container mt-1\" key={item.id}>\r\n                  <div className=\"banner__image \">\r\n                    <img\r\n                      className=\"img\"\r\n                      src={URL.createObjectURL(item.file)}\r\n                      alt=\"Выбранное изображение\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"banner__tools\">\r\n                    <button\r\n                      className=\"banner__btn banner__delete-btn\"\r\n                      onClick={() => handleRemoveImage(item.id)}\r\n                    >\r\n                      <DeleteIcon size={24} />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            <label className=\"add-btn add-btn_sm\">\r\n              <input\r\n                id=\"inputfile\"\r\n                className=\"d-none\"\r\n                type=\"file\"\r\n                onChange={(e) => handleAddImage(e.target.files)}\r\n              />\r\n              Добавить фотографию\r\n            </label>\r\n          </div>\r\n\r\n          <div className=\"form__label\">\r\n            <div className=\"form__label-name\">\r\n              Название\r\n              <span className=\"exact_star\">*</span>\r\n            </div>\r\n\r\n            <div className=\"form__label-input\">\r\n              <input\r\n                type=\"text\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form__label\">\r\n            <div className=\"form__label-name\">\r\n              Цена\r\n              <span className=\"exact_star\">*</span>\r\n            </div>\r\n\r\n            <div className=\"form__label-input\">\r\n              <input\r\n                type=\"text\"\r\n                value={price}\r\n                onFocus={(e) => {\r\n                  e.target.select()\r\n                }}\r\n                onChange={(e) => {\r\n                  let value = e.target.value;\r\n                  if (!isNaN(Number(value)))\r\n                    setPrice(e.target.value);\r\n                }}\r\n              />\r\n              <div className=\"form__label-input-type\">c.</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form__label\">\r\n            <div className=\"form__label-name\">Акция</div>\r\n\r\n            <div className=\"form__label-input\">\r\n              <input\r\n                type=\"text\"\r\n                value={discount}\r\n                onFocus={(e) => e.target.select()}\r\n                onChange={(e) => {\r\n                  let value = e.target.value.replace(',', '');\r\n                  if (value.indexOf(',') !== -1) return;\r\n                  if (!isNaN(Number(value)))\r\n                    setDiscount(e.target.value);\r\n                }}\r\n              />\r\n              <div className=\"form__label-input-type\">%</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form__label\">\r\n            <div className=\"form__label-name\">\r\n              Vendor Code\r\n              <span className=\"exact_star\">*</span>\r\n            </div>\r\n\r\n            <div className=\"form__label-input\">\r\n              <input\r\n                type=\"text\"\r\n                value={vendorcode}\r\n                onChange={(e) => setVendorcode(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form__label\">\r\n            <div className=\"form__label-name\">\r\n              Категория\r\n              <span className=\"exact_star\">*</span>\r\n            </div>\r\n            <SubSubcategoriesMenu\r\n              id=\"categoryId\"\r\n              selectedId={categoryId}\r\n              onSelect={(id) => setCategoryId(id)}\r\n              list={categories.data}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form__label\">\r\n            <div className=\"form__label-name\">Бренд</div>\r\n            <DropdownMenu\r\n              id=\"categoryId\"\r\n              value={brand?.name || \"\"}\r\n              onSelect={(name, id?) => setBrand({ id: id || \"\", name })}\r\n              list={brands.data}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form__label\">\r\n            <div className=\"form__label-name mb-1\">Характеристки</div>\r\n            <CharacteristicsDropdown\r\n              characteristicsValues={characteristicsValues}\r\n              setCharacteristicsValues={setCharacteristicsValues}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form__label\">\r\n            <div className=\"form__label-name\">Описание</div>\r\n\r\n            <div className=\"form__label-input form__label-textarea\">\r\n              <textarea\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <button\r\n            disabled={pending}\r\n            className={classNames(\r\n              \"deliveryType__add-new-btn\",\r\n              pending && \"deliveryType__add-new-btn_pending\"\r\n            )}\r\n            onClick={handleAddProduct}\r\n          >\r\n            Добавить продукт\r\n          </button>\r\n\r\n          {errorText && <div className=\"error-text mt-1\">{errorText}</div>}\r\n        </div>\r\n      </MainLayout>\r\n    </Page>\r\n  );\r\n};\r\n","import { Link, Page } from \"@components\";\r\nimport { AppPaths } from \"@constants\";\r\nimport { characteristicControllers } from \"@controllers\";\r\nimport { MainLayout } from \"@layouts\";\r\nimport { useAppDispatch, useAppSelector } from \"@store\";\r\nimport classNames from \"classnames\";\r\nimport React from \"react\";\r\n\r\nexport const AddCharacteristics: React.FC = (): JSX.Element => {\r\n  const dispatch = useAppDispatch();\r\n  const { pending } = useAppSelector((state) => state.characteristic);\r\n\r\n  const [name, setName] = React.useState<string>(\"\");\r\n\r\n  const handleCreateCharacteristic = React.useCallback(() => {\r\n    if (!name) return;\r\n    dispatch(characteristicControllers.create({ name }));\r\n  }, [dispatch, name]);\r\n\r\n  return (\r\n    <Page title=\"Добавить характеристику\">\r\n      <MainLayout>\r\n        <div className=\"add-characteristics\">\r\n          <h1 className=\"title mb-3\">Добавить характеристику</h1>\r\n          <div className=\"deliveryType__add-new mb-3\">\r\n            <div className=\"d-flex gap-20\">\r\n              <div className=\"deliveryType__add-new-label\">\r\n                <p>Название характеристики</p>\r\n                <input\r\n                  type=\"text\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                  className=\"deliveryType__add-new-input\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <button\r\n              disabled={pending}\r\n              className={classNames(\r\n                \"deliveryType__add-new-btn\",\r\n                pending && \"deliveryType__add-new-btn_pending\"\r\n              )}\r\n              onClick={handleCreateCharacteristic}\r\n            >\r\n              Добавить\r\n            </button>\r\n            <Link\r\n              to={AppPaths.characteristics}\r\n              className=\"deliveryType__add-new-btn-cancel\"\r\n            >\r\n              Отмена\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </MainLayout>\r\n    </Page>\r\n  );\r\n};\r\n","import { Link, Page } from \"@components\";\r\nimport { AppPaths } from \"@constants\";\r\nimport { characteristicControllers } from \"@controllers\";\r\nimport { MainLayout } from \"@layouts\";\r\nimport { useAppDispatch, useAppSelector } from \"@store\";\r\nimport classNames from \"classnames\";\r\nimport React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nexport const AddCharacteristicValue: React.FC = (): JSX.Element => {\r\n  const dispatch = useAppDispatch();\r\n  const { pending } = useAppSelector((state) => state.characteristic);\r\n  const { id } = useParams();\r\n\r\n  const [name, setName] = React.useState<string>(\"\");\r\n\r\n  const handleCreateCharacteristicValue = React.useCallback(() => {\r\n    if (!name || !id) return;\r\n    dispatch(\r\n      characteristicControllers.createValue({\r\n        value: name,\r\n        characteristicId: id,\r\n      })\r\n    );\r\n  }, [dispatch, name, id]);\r\n\r\n  return (\r\n    <Page title=\"Добавить значение характеристики\">\r\n      <MainLayout>\r\n        <div className=\"add-characteristics\">\r\n          <h1 className=\"title mb-3\">Добавить значение характеристики</h1>\r\n          <div className=\"deliveryType__add-new mb-3\">\r\n            <div className=\"d-flex gap-20\">\r\n              <div className=\"deliveryType__add-new-label\">\r\n                <p>Название значения</p>\r\n                <input\r\n                  type=\"text\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                  className=\"deliveryType__add-new-input\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <button\r\n              disabled={pending}\r\n              className={classNames(\r\n                \"deliveryType__add-new-btn\",\r\n                pending && \"deliveryType__add-new-btn_pending\"\r\n              )}\r\n              onClick={handleCreateCharacteristicValue}\r\n            >\r\n              Добавить\r\n            </button>\r\n            <Link\r\n              to={AppPaths.characteristics}\r\n              className=\"deliveryType__add-new-btn-cancel\"\r\n            >\r\n              Отмена\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </MainLayout>\r\n    </Page>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link, Page } from \"@components\";\r\nimport { MainLayout } from \"@layouts\";\r\nimport { useAppDispatch, useAppSelector } from \"@store\";\r\nimport { brandControllers } from \"@controllers\";\r\nimport { AppPaths } from \"@constants\";\r\nimport classNames from \"classnames\";\r\n\r\nexport const AddBrand: React.FC = (): JSX.Element => {\r\n  const dispatch = useAppDispatch();\r\n  const { pending } = useAppSelector((state) => state.brand);\r\n\r\n  const [name, setName] = React.useState<string>(\"\");\r\n  const [file, setFile] = React.useState<File | null>(null);\r\n\r\n  const handleSelectImg = React.useCallback((files: FileList | null) => {\r\n    if (!files) return;\r\n    setFile(files[0]);\r\n  }, []);\r\n\r\n  const handleCreateBrand = React.useCallback(() => {\r\n    if (!file) return;\r\n    const formData = new FormData();\r\n    formData.append(\"image\", file);\r\n    formData.append(\"name\", name);\r\n    dispatch(brandControllers.create(formData));\r\n  }, [file, name, dispatch]);\r\n\r\n  return (\r\n    <Page title=\"Добавить бренд\">\r\n      <MainLayout>\r\n        <div className=\"add-characteristics\">\r\n          <h1 className=\"title mb-3\">Добавить бренд</h1>\r\n          <div className=\"deliveryType__add-new mb-3\">\r\n            <div className=\"d-flex direction-column gap-20\">\r\n              <div className=\"deliveryType__add-new-label\">\r\n                <label className=\"add-btn\">\r\n                  <input\r\n                    id=\"inputfile\"\r\n                    onChange={(e) => handleSelectImg(e.target.files)}\r\n                    type=\"file\"\r\n                    className=\"d-none\"\r\n                  />\r\n                  Выбрать фотографию\r\n                </label>\r\n              </div>\r\n              {file && (\r\n                <div className=\"margin-center deliveryType__add-new-label banner__image banner__image_sm\">\r\n                  <img\r\n                    className=\"img\"\r\n                    src={URL.createObjectURL(file)}\r\n                    alt=\"Выбранное изображение\"\r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"deliveryType__add-new-label\">\r\n                <p>Название бренда</p>\r\n                <input\r\n                  type=\"text\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                  className=\"deliveryType__add-new-input\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <button\r\n              disabled={pending}\r\n              className={classNames(\r\n                \"deliveryType__add-new-btn\",\r\n                pending && \"deliveryType__add-new-btn_pending\"\r\n              )}\r\n              onClick={handleCreateBrand}\r\n            >\r\n              Добавить\r\n            </button>\r\n            <Link\r\n              to={AppPaths.brands}\r\n              className=\"deliveryType__add-new-btn-cancel\"\r\n            >\r\n              Отмена\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </MainLayout>\r\n    </Page>\r\n  );\r\n};\r\n","import { Page } from \"@components\";\r\nimport { MainLayout } from \"@layouts\";\r\nimport { useAppDispatch, useAppSelector } from \"@store\";\r\nimport React from \"react\";\r\nimport { deliveryTypeControllers } from \"@controllers\";\r\nimport classNames from \"classnames\";\r\n\r\nexport const AddDeliveryType: React.FC = (): JSX.Element => {\r\n  const dispatch = useAppDispatch();\r\n  const { pending } = useAppSelector((state) => state.deliveryType);\r\n\r\n  const [name, setName] = React.useState<string>(\"\");\r\n  const [price, setPrice] = React.useState<string>(\"0\");\r\n\r\n  const handleChangePrice = React.useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      const value = Number(e.target.value);\r\n      if (isNaN(value)) return;\r\n      if (value < 0) return;\r\n      setPrice(e.target.value);\r\n    },\r\n    []\r\n  );\r\n\r\n  const handleCreateDeliveryType = React.useCallback(() => {\r\n    dispatch(deliveryTypeControllers.create({ name, price }));\r\n  }, [name, price, dispatch]);\r\n\r\n  return (\r\n    <Page title=\"Добавить способ доставки\">\r\n      <MainLayout>\r\n        <div className=\"add-characteristics\">\r\n          <h1 className=\"title mb-3\">Добавить способ доставки</h1>\r\n          <div className=\"deliveryType__add-new mb-3\">\r\n            <div className=\"d-flex gap-20\">\r\n              <div className=\"deliveryType__add-new-label\">\r\n                <p>Название доставки</p>\r\n                <input\r\n                  type=\"text\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                  className=\"deliveryType__add-new-input\"\r\n                />\r\n              </div>\r\n              <div className=\"deliveryType__add-new-label\">\r\n                <p>Стоимость</p>\r\n                <input\r\n                  type=\"string\"\r\n                  value={price}\r\n                  onChange={handleChangePrice}\r\n                  className=\"deliveryType__add-new-input\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <button\r\n              onClick={handleCreateDeliveryType}\r\n              disabled={pending}\r\n              className={classNames(\r\n                \"deliveryType__add-new-btn\",\r\n                pending && \"deliveryType__add-new-btn_pending\"\r\n              )}\r\n            >\r\n              Добавить\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </MainLayout>\r\n    </Page>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Page, SubcategoriesMenu, ToggleButton } from \"@components\";\r\nimport { MainLayout } from \"@layouts\";\r\nimport { useAppDispatch, useAppSelector } from \"@store\";\r\nimport { categoryControllers } from \"@controllers\";\r\nimport classNames from \"classnames\";\r\n\r\nexport const AddCategory: React.FC = (): JSX.Element => {\r\n  const dispatch = useAppDispatch();\r\n  const { data, pending } = useAppSelector((state) => state.category);\r\n\r\n  const [subcategoryId, setSubCategoryId] = React.useState<string | null>(null);\r\n  const [name, setName] = React.useState<string>(\"\");\r\n  const [popular, setPopular] = React.useState<boolean>(false);\r\n  const [wrapData, setWrapData] = React.useState<any[]>([]);\r\n  const [icon, setIcon] = React.useState<File | null>(null);\r\n  const [image, setImage] = React.useState<File | null>(null);\r\n\r\n  const handleSelectIcon = React.useCallback((files: FileList | null) => {\r\n    if (!files) return;\r\n    setIcon(files[0]);\r\n  }, []);\r\n\r\n  const handleSelectImage = React.useCallback((files: FileList | null) => {\r\n    if (!files) return;\r\n    setImage(files[0]);\r\n  }, []);\r\n\r\n  const handleAddCategory = React.useCallback((): void => {\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"name\", name);\r\n    formData.append(\"isPopular\", popular ? \"true\" : \"false\");\r\n    if (image) formData.append(\"image\", image);\r\n    if (icon) formData.append(\"icon\", icon);\r\n    if (subcategoryId) formData.append(\"parentCategoryId\", subcategoryId);\r\n\r\n    dispatch(categoryControllers.create(formData));\r\n  }, [dispatch, name, popular, subcategoryId, image, icon]);\r\n\r\n  React.useEffect(() => {\r\n    dispatch(categoryControllers.get());\r\n  }, [dispatch]);\r\n\r\n  React.useEffect(() => {\r\n    setWrapData([{ id: null, name: \"Корневая категория\" }, ...data]);\r\n  }, [data]);\r\n\r\n  return (\r\n    <Page title=\"Добавить категорию\">\r\n      <MainLayout>\r\n        <div className=\"add-characteristics\">\r\n          <h1 className=\"title mb-3\">Добавить категорию</h1>\r\n          <div className=\"deliveryType__add-new mb-3\">\r\n            <div className=\"deliveryType__add-new-label\">\r\n              {subcategoryId && <p>Подкатегория для:</p>}\r\n              <SubcategoriesMenu\r\n                id=\"1\"\r\n                selectedId={subcategoryId}\r\n                onSelect={(id) => setSubCategoryId(id)}\r\n                list={wrapData}\r\n              />\r\n            </div>\r\n            <div className=\"deliveryType__add-new-label\">\r\n              <p>Название категории</p>\r\n              <input\r\n                type=\"text\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                className=\"deliveryType__add-new-input\"\r\n              />\r\n            </div>\r\n            <div className=\"deliveryType__add-new-label\">\r\n              <label className=\"add-btn\">\r\n                <input\r\n                  id=\"inputfile\"\r\n                  onChange={(e) => handleSelectIcon(e.target.files)}\r\n                  type=\"file\"\r\n                  className=\"d-none\"\r\n                />\r\n                Выбрать Иконку\r\n              </label>\r\n            </div>\r\n            {icon && (\r\n              <div className=\"margin-center deliveryType__add-new-label banner__image banner__image_sm\">\r\n                <img\r\n                  className=\"img\"\r\n                  src={URL.createObjectURL(icon)}\r\n                  alt=\"Выбранное изображение\"\r\n                />\r\n              </div>\r\n            )}\r\n            <div className=\"deliveryType__add-new-label\">\r\n              <label className=\"add-btn\">\r\n                <input\r\n                  id=\"inputfile\"\r\n                  onChange={(e) => handleSelectImage(e.target.files)}\r\n                  type=\"file\"\r\n                  className=\"d-none\"\r\n                />\r\n                Выбрать фотографию категории\r\n              </label>\r\n            </div>\r\n            {image && (\r\n              <div className=\"margin-center deliveryType__add-new-label banner__image banner__image_xs\">\r\n                <img\r\n                  className=\"img\"\r\n                  src={URL.createObjectURL(image)}\r\n                  alt=\"Выбранное изображение\"\r\n                />\r\n              </div>\r\n            )}\r\n            <div className=\"deliveryType__add-new-label\">\r\n              <p>Популярная категория</p>\r\n              <ToggleButton\r\n                checked={popular}\r\n                onToggle={(v: boolean) => setPopular(v)}\r\n              />\r\n            </div>\r\n            <button\r\n              disabled={pending}\r\n              className={classNames(\r\n                \"deliveryType__add-new-btn\",\r\n                pending && \"deliveryType__add-new-btn_pending\"\r\n              )}\r\n              onClick={handleAddCategory}\r\n            >\r\n              Добавить\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </MainLayout>\r\n    </Page>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link, Page } from \"@components\";\r\nimport { MainLayout } from \"@layouts\";\r\nimport { useAppDispatch, useAppSelector } from \"@store\";\r\nimport { bannerControllers } from \"@controllers\";\r\nimport { AppPaths } from \"@constants\";\r\nimport classNames from \"classnames\";\r\n\r\nexport const AddBanner: React.FC = (): JSX.Element => {\r\n  const dispatch = useAppDispatch();\r\n  const { pending } = useAppSelector((state) => state.banner);\r\n\r\n  const [src, setSrc] = React.useState<string>(\"\");\r\n  const [file, setFile] = React.useState<File | null>(null);\r\n\r\n  const handleSelectImg = React.useCallback((files: FileList | null) => {\r\n    if (!files) return;\r\n    setFile(files[0]);\r\n  }, []);\r\n\r\n  const handleCreateBanner = React.useCallback(() => {\r\n    if (!file) return;\r\n    const fd = new FormData();\r\n    fd.append(\"image\", file);\r\n    fd.append(\"href\", src);\r\n\r\n    dispatch(bannerControllers.create(fd));\r\n  }, [file, src, dispatch]);\r\n\r\n  return (\r\n    <Page title=\"Добавить баннер\">\r\n      <MainLayout>\r\n        <div className=\"add-characteristics\">\r\n          <h1 className=\"title mb-3\">Добавить баннер</h1>\r\n          <div className=\"deliveryType__add-new mb-3\">\r\n            <div className=\"d-flex direction-column gap-20\">\r\n              <div className=\"deliveryType__add-new-label\">\r\n                <label className=\"add-btn\">\r\n                  <input\r\n                    id=\"inputfile\"\r\n                    onChange={(e) => handleSelectImg(e.target.files)}\r\n                    type=\"file\"\r\n                    className=\"d-none\"\r\n                  />\r\n                  Выбрать фотографию\r\n                </label>\r\n              </div>\r\n              {file && (\r\n                <div className=\"deliveryType__add-new-label banner__image\">\r\n                  <img\r\n                    className=\"img\"\r\n                    src={URL.createObjectURL(file)}\r\n                    alt=\"Выбранное изображение\"\r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"deliveryType__add-new-label\">\r\n                <p>Ссылка баннера</p>\r\n                <input\r\n                  type=\"text\"\r\n                  value={src}\r\n                  onChange={(e) => setSrc(e.target.value)}\r\n                  className=\"deliveryType__add-new-input\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <button\r\n              disabled={pending}\r\n              className={classNames(\r\n                \"deliveryType__add-new-btn\",\r\n                pending && \"deliveryType__add-new-btn_pending\"\r\n              )}\r\n              onClick={handleCreateBanner}\r\n            >\r\n              Добавить\r\n            </button>\r\n            <Link\r\n              to={AppPaths.banners}\r\n              className=\"deliveryType__add-new-btn-cancel\"\r\n            >\r\n              Отмена\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </MainLayout>\r\n    </Page>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link, Page } from \"@components\";\r\nimport { MainLayout } from \"@layouts\";\r\nimport { useAppDispatch, useAppSelector } from \"@store\";\r\nimport { paymentTypesControllers } from \"@controllers\";\r\nimport { AppPaths } from \"@constants\";\r\nimport classNames from \"classnames\";\r\n\r\nexport const AddPaymentType: React.FC = (): JSX.Element => {\r\n  const dispatch = useAppDispatch();\r\n  const { pending } = useAppSelector((state) => state.paymentTypes);\r\n\r\n  const [name, setName] = React.useState<string>(\"\");\r\n  const [description, setDescription] = React.useState<string>(\"\");\r\n  const [file, setFile] = React.useState<File | null>(null);\r\n\r\n  const handleSelectImg = React.useCallback((files: FileList | null) => {\r\n    if (!files) return;\r\n    setFile(files[0]);\r\n  }, []);\r\n\r\n  const handleCreatePaymentType = React.useCallback(() => {\r\n    if (!file) return;\r\n    const formData = new FormData();\r\n    formData.append(\"image\", file);\r\n    formData.append(\"name\", name);\r\n    formData.append(\"description\", description);\r\n    dispatch(paymentTypesControllers.create(formData));\r\n  }, [file, name, description, dispatch]);\r\n\r\n  return (\r\n    <Page title=\"Добавить способ оплаты\">\r\n      <MainLayout>\r\n        <div className=\"add-characteristics\">\r\n          <h1 className=\"title mb-3\">Добавить способ оплаты</h1>\r\n          <div className=\"deliveryType__add-new mb-3\">\r\n            <div className=\"d-flex direction-column gap-20\">\r\n              <div className=\"deliveryType__add-new-label\">\r\n                <label className=\"add-btn\">\r\n                  <input\r\n                    id=\"inputfile\"\r\n                    onChange={(e) => handleSelectImg(e.target.files)}\r\n                    type=\"file\"\r\n                    className=\"d-none\"\r\n                  />\r\n                  Выбрать фотографию\r\n                </label>\r\n              </div>\r\n              {file && (\r\n                <div className=\"margin-center deliveryType__add-new-label banner__image banner__image_sm\">\r\n                  <img\r\n                    className=\"img\"\r\n                    src={URL.createObjectURL(file)}\r\n                    alt=\"Выбранное изображение\"\r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"deliveryType__add-new-label\">\r\n                <p>Название</p>\r\n                <input\r\n                  type=\"text\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                  className=\"deliveryType__add-new-input\"\r\n                />\r\n              </div>\r\n              <div className=\"deliveryType__add-new-label\">\r\n                <p>Описание</p>\r\n                <input\r\n                  type=\"text\"\r\n                  value={description}\r\n                  onChange={(e) => setDescription(e.target.value)}\r\n                  className=\"deliveryType__add-new-input\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <button\r\n              disabled={pending}\r\n              className={classNames(\r\n                \"deliveryType__add-new-btn\",\r\n                pending && \"deliveryType__add-new-btn_pending\"\r\n              )}\r\n              onClick={handleCreatePaymentType}\r\n            >\r\n              Добавить\r\n            </button>\r\n            <Link\r\n              to={AppPaths.paymentTypes}\r\n              className=\"deliveryType__add-new-btn-cancel\"\r\n            >\r\n              Отмена\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </MainLayout>\r\n    </Page>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Link, Page } from \"@components\";\r\nimport { MainLayout } from \"@layouts\";\r\nimport { useAppDispatch, useAppSelector } from \"@store\";\r\nimport { characteristicControllers } from \"@controllers\";\r\nimport { ICharacteristic } from \"@interfaces\";\r\nimport { history } from \"@utils/history\";\r\nimport { AppPaths, ErrorPaths } from \"@constants\";\r\nimport classNames from \"classnames\";\r\n\r\nexport const EditCharacteristic: React.FC = (): JSX.Element => {\r\n  const { id } = useParams();\r\n\r\n  const [name, setName] = React.useState<string>(\"\");\r\n\r\n  const dispatch = useAppDispatch();\r\n  const { data, pending } = useAppSelector((state) => state.characteristic);\r\n\r\n  const handleEditCharacteristic = React.useCallback(() => {\r\n    if (!id) return;\r\n    dispatch(characteristicControllers.edit({ name }, id));\r\n  }, [dispatch, id, name]);\r\n\r\n  React.useEffect(() => {\r\n    dispatch(characteristicControllers.get());\r\n  }, [dispatch]);\r\n\r\n  React.useEffect(() => {\r\n    if (!pending || !data.length) return;\r\n    const characteristic: ICharacteristic | undefined = data.find(\r\n      (item) => item.id === id\r\n    );\r\n    if (!characteristic) return history.push(ErrorPaths.notFound);\r\n    setName(characteristic.name);\r\n  }, [id, data, pending]);\r\n\r\n  return (\r\n    <Page title=\"Изменить характеристику\">\r\n      <MainLayout>\r\n        <div className=\"add-characteristics\">\r\n          <h1 className=\"title mb-3\">Изменить характеристику</h1>\r\n          <div className=\"deliveryType__add-new mb-3\">\r\n            <div className=\"d-flex gap-20\">\r\n              <div className=\"deliveryType__add-new-label\">\r\n                <p>Название характеристики</p>\r\n                <input\r\n                  type=\"text\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                  className=\"deliveryType__add-new-input\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <button\r\n              disabled={pending}\r\n              className={classNames(\r\n                \"deliveryType__add-new-btn\",\r\n                pending && \"deliveryType__add-new-btn_pending\"\r\n              )}\r\n              onClick={handleEditCharacteristic}\r\n            >\r\n              Изменить\r\n            </button>\r\n            <Link\r\n              to={AppPaths.characteristics}\r\n              className=\"deliveryType__add-new-btn-cancel\"\r\n            >\r\n              Отмена\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </MainLayout>\r\n    </Page>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Link, Page } from \"@components\";\r\nimport { MainLayout } from \"@layouts\";\r\nimport { useAppDispatch, useAppSelector } from \"@store\";\r\nimport { deliveryTypeControllers } from \"@controllers\";\r\nimport { history } from \"@utils/history\";\r\nimport { AppPaths, ErrorPaths } from \"@constants\";\r\nimport classNames from \"classnames\";\r\n\r\nexport const EditDeliveryType: React.FC = (): JSX.Element => {\r\n  const { id } = useParams();\r\n\r\n  const dispatch = useAppDispatch();\r\n  const [name, setName] = React.useState<string>(\"\");\r\n  const [price, setPrice] = React.useState<string>(\"0\");\r\n\r\n  const { deliveyTypeById, pending } = useAppSelector(\r\n    (state) => state.deliveryType\r\n  );\r\n\r\n  const handleChangePrice = React.useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      const value = e.target.value\r\n      if (!isNaN(Number(value)))\r\n      if (Number(value) < 0) return;\r\n      setPrice(e.target.value);\r\n    },\r\n    []\r\n  );\r\n\r\n  const handleEditDeliveryType = React.useCallback(() => {\r\n    if (!id) return;\r\n    dispatch(deliveryTypeControllers.edit({ name, price }, id));\r\n  }, [name, price, dispatch, id]);\r\n\r\n  React.useEffect(() => {\r\n    if (!id) return;\r\n    dispatch(deliveryTypeControllers.getById(id));\r\n  }, [dispatch, id]);\r\n\r\n  React.useEffect(() => {\r\n    if (!pending) return;\r\n    if (!deliveyTypeById) return history.push(ErrorPaths.notFound);\r\n    setName(deliveyTypeById.name);\r\n    setPrice(deliveyTypeById.price);\r\n  }, [id, deliveyTypeById, pending]);\r\n\r\n  return (\r\n    <Page title=\"Изменить способ доставки\">\r\n      <MainLayout>\r\n        <div className=\"add-characteristics\">\r\n          <h1 className=\"title mb-3\">Изменить способ доставки</h1>\r\n          <div className=\"deliveryType__add-new mb-3\">\r\n            <div className=\"d-flex gap-20\">\r\n              <div className=\"deliveryType__add-new-label\">\r\n                <p>Название доставки</p>\r\n                <input\r\n                  type=\"text\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                  className=\"deliveryType__add-new-input\"\r\n                />\r\n              </div>\r\n              <div className=\"deliveryType__add-new-label\">\r\n                <p>Стоимость</p>\r\n                <input\r\n                  type=\"text\"\r\n                  value={price}\r\n                  onChange={handleChangePrice}\r\n                  className=\"deliveryType__add-new-input\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <button\r\n              onClick={handleEditDeliveryType}\r\n              disabled={pending}\r\n              className={classNames(\r\n                \"deliveryType__add-new-btn\",\r\n                pending && \"deliveryType__add-new-btn_pending\"\r\n              )}\r\n            >\r\n              Изменить\r\n            </button>\r\n            <Link\r\n              to={AppPaths.deliveryType}\r\n              className=\"deliveryType__add-new-btn-cancel\"\r\n            >\r\n              Отмена\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </MainLayout>\r\n    </Page>\r\n  );\r\n};\r\n","import { Link, Page, SubcategoriesMenu, ToggleButton } from \"@components\";\r\nimport { AppPaths, ErrorPaths } from \"@constants\";\r\nimport { categoryControllers } from \"@controllers\";\r\nimport { ICategory } from \"@interfaces\";\r\nimport { MainLayout } from \"@layouts\";\r\nimport { useAppDispatch, useAppSelector } from \"@store\";\r\nimport { BaseUrlWithoutApi } from \"@utils/BaseUrl\";\r\nimport { history } from \"@utils/history\";\r\nimport classNames from \"classnames\";\r\nimport React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nexport const EditCategory: React.FC = (): JSX.Element => {\r\n  const { id } = useParams();\r\n\r\n  const dispatch = useAppDispatch();\r\n  const { data, popularData, pending } = useAppSelector(\r\n    (state) => state.category\r\n  );\r\n\r\n  const [canDelete, setCanDelete] = React.useState<boolean>(true);\r\n\r\n  const [currentCategoryId, setCurrentCategoryId] = React.useState<string | null>(null);\r\n  const [subcategoryId, setSubCategoryId] = React.useState<string | null>(null);\r\n  const [name, setName] = React.useState<string>(\"\");\r\n  const [popular, setPopular] = React.useState<boolean>(false);\r\n  const [wrapData, setWrapData] = React.useState<any[]>([]);\r\n  const [icon, setIcon] = React.useState<File | null>(null);\r\n  const [image, setImage] = React.useState<File | null>(null);\r\n  const [iconPath, setIconPath] = React.useState<string | null>(null);\r\n  const [imagePath, setImagePath] = React.useState<string | null>(null);\r\n\r\n  const handleSelectIcon = React.useCallback((files: FileList | null) => {\r\n    if (!files) return;\r\n    setIconPath(URL.createObjectURL(files[0]));\r\n    setIcon(files[0]);\r\n  }, []);\r\n\r\n  const handleSelectImage = React.useCallback((files: FileList | null) => {\r\n    if (!files) return;\r\n    setImagePath(URL.createObjectURL(files[0]));\r\n    setImage(files[0]);\r\n  }, []);\r\n\r\n  const handleEditCategory = React.useCallback((): void => {\r\n    if (!id) return;\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"name\", name);\r\n    formData.append(\"isPopular\", popular ? \"true\" : \"false\");\r\n    if (image) formData.append(\"image\", image);\r\n    if (icon) formData.append(\"icon\", icon);\r\n    if (subcategoryId) formData.append(\"parentCategoryId\", subcategoryId);\r\n\r\n    dispatch(categoryControllers.edit(formData, id));\r\n  }, [dispatch, name, popular, subcategoryId, image, icon, id]);\r\n\r\n  const handleRemoveCategory = React.useCallback((): void => {\r\n    if (!id) return;\r\n    dispatch(categoryControllers.delete(id));\r\n  }, [dispatch, id]);\r\n\r\n  React.useEffect(() => {\r\n    dispatch(categoryControllers.get());\r\n    dispatch(categoryControllers.getPopular());\r\n  }, [dispatch]);\r\n\r\n  React.useEffect(() => {\r\n    if (!data.length) return;\r\n    setWrapData([{ id: null, name: \"Корневая категория\" }, ...data]);\r\n  }, [data]);\r\n\r\n  React.useEffect(() => {\r\n    if (!pending || !data.length) return;\r\n    let ok = false;\r\n    const initCategory = (parentId: string | null, item: ICategory) => {\r\n      setCurrentCategoryId(item.id)\r\n      setName(item.name);\r\n      setPopular(popularData.find((i) => i.id === item.id) ? true : false);\r\n      setSubCategoryId(parentId);\r\n      if (item.subCategories.length > 0) setCanDelete(false);\r\n      if (item.iconPath) setIconPath(BaseUrlWithoutApi + item.iconPath);\r\n      if (item.imagePath) setImagePath(BaseUrlWithoutApi + item.imagePath);\r\n    };\r\n    for (let i = 0; i < data.length; i++) {\r\n      if (data[i].id === id) {\r\n        initCategory(null, data[i]);\r\n        ok = true;\r\n        break;\r\n      } else {\r\n        for (let j = 0; j < data[i].subCategories.length; j++)\r\n          if (data[i].subCategories[j].id === id) {\r\n            initCategory(data[i].id, data[i].subCategories[j]);\r\n            ok = true;\r\n            break;\r\n          } else {\r\n            for (\r\n              let k = 0;\r\n              k < data[i].subCategories[j].subCategories.length;\r\n              k++\r\n            )\r\n              if (data[i].subCategories[j].subCategories[k].id === id) {\r\n                initCategory(\r\n                  data[i].subCategories[j].id,\r\n                  data[i].subCategories[j].subCategories[k]\r\n                );\r\n                ok = true;\r\n                break;\r\n              }\r\n          }\r\n      }\r\n    }\r\n    if (!ok) history.push(ErrorPaths.notFound);\r\n  }, [id, data, popularData, pending]);\r\n\r\n  return (\r\n    <Page title=\"Изменить категорию\">\r\n      <MainLayout>\r\n        <div className=\"add-characteristics\">\r\n          <h1 className=\"title mb-3\">Изменить категорию</h1>\r\n          <div className=\"deliveryType__add-new mb-3\">\r\n            <div className=\"deliveryType__add-new-label\">\r\n              {subcategoryId && <p>Подкатегория для:</p>}\r\n              <SubcategoriesMenu\r\n                id=\"1\"\r\n                currentId={currentCategoryId}\r\n                selectedId={subcategoryId}\r\n                onSelect={(id) => setSubCategoryId(id)}\r\n                list={wrapData}\r\n              />\r\n            </div>\r\n            <div className=\"deliveryType__add-new-label\">\r\n              <p>Название категории</p>\r\n              <input\r\n                type=\"text\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                className=\"deliveryType__add-new-input\"\r\n              />\r\n            </div>\r\n            <div className=\"deliveryType__add-new-label\">\r\n              <label className=\"add-btn\">\r\n                <input\r\n                  id=\"inputfile\"\r\n                  onChange={(e) => handleSelectIcon(e.target.files)}\r\n                  type=\"file\"\r\n                  className=\"d-none\"\r\n                />\r\n                Выбрать Иконку\r\n              </label>\r\n            </div>\r\n            {(icon || iconPath) && (\r\n              <div className=\"margin-center deliveryType__add-new-label banner__image banner__image_xs\">\r\n                <img\r\n                  className=\"img\"\r\n                  src={\r\n                    icon ? URL.createObjectURL(icon) : iconPath ? iconPath : \"\"\r\n                  }\r\n                  alt=\"Выбранное изображение\"\r\n                />\r\n              </div>\r\n            )}\r\n            <div className=\"deliveryType__add-new-label\">\r\n              <label className=\"add-btn\">\r\n                <input\r\n                  id=\"inputfile\"\r\n                  onChange={(e) => handleSelectImage(e.target.files)}\r\n                  type=\"file\"\r\n                  className=\"d-none\"\r\n                />\r\n                Выбрать фотографию категории\r\n              </label>\r\n            </div>\r\n            {(image || imagePath) && (\r\n              <div className=\"margin-center deliveryType__add-new-label banner__image banner__image_sm\">\r\n                <img\r\n                  className=\"img\"\r\n                  src={\r\n                    image\r\n                      ? URL.createObjectURL(image)\r\n                      : imagePath\r\n                      ? imagePath\r\n                      : \"\"\r\n                  }\r\n                  alt=\"Выбранное изображение\"\r\n                />\r\n              </div>\r\n            )}\r\n            <div className=\"deliveryType__add-new-label\">\r\n              <p>Популярная категория</p>\r\n              <ToggleButton\r\n                checked={popular}\r\n                onToggle={(v: boolean) => setPopular(v)}\r\n              />\r\n            </div>\r\n            <button\r\n              disabled={pending}\r\n              className={classNames(\r\n                \"deliveryType__add-new-btn\",\r\n                pending && \"deliveryType__add-new-btn_pending\"\r\n              )}\r\n              onClick={handleEditCategory}\r\n            >\r\n              Изменить\r\n            </button>\r\n            {canDelete && (\r\n              <button\r\n                disabled={pending}\r\n                className={classNames(\r\n                  \"deliveryType__add-new-btn deliveryType__add-new-btn_remove\",\r\n                  pending && \"deliveryType__add-new-btn_pending\"\r\n                )}\r\n                onClick={handleRemoveCategory}\r\n              >\r\n                Удалить категорию\r\n              </button>\r\n            )}\r\n            <Link\r\n              to={AppPaths.categories}\r\n              className=\"deliveryType__add-new-btn-cancel\"\r\n            >\r\n              Отмена\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </MainLayout>\r\n    </Page>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { DropdownMenu, Link, Page } from \"@components\";\r\nimport { MainLayout } from \"@layouts\";\r\nimport { useAppDispatch, useAppSelector } from \"@store\";\r\nimport { history } from \"@utils/history\";\r\nimport { AppPaths, ErrorPaths } from \"@constants\";\r\nimport { characteristicControllers } from \"@controllers\";\r\nimport classNames from \"classnames\";\r\n\r\nexport const EditCharacteristicValue: React.FC = (): JSX.Element => {\r\n  const { id } = useParams();\r\n\r\n  const [loaded, setLoaded] = React.useState<boolean>(false);\r\n  const [name, setName] = React.useState<string>(\"\");\r\n  const [selectedCharacteristic, setSelectedCharacteristic] = React.useState<{\r\n    id: string;\r\n    name: string;\r\n  } | null>(null);\r\n\r\n  const dispatch = useAppDispatch();\r\n  const { dataWithValue, pending } = useAppSelector(\r\n    (state) => state.characteristic\r\n  );\r\n\r\n  const handleEditValue = React.useCallback(() => {\r\n    if (!id || !selectedCharacteristic) return;\r\n    dispatch(\r\n      characteristicControllers.editValue(\r\n        { value: name, characteristicId: selectedCharacteristic.id },\r\n        id\r\n      )\r\n    );\r\n  }, [name, selectedCharacteristic, dispatch, id]);\r\n\r\n  React.useEffect(() => {\r\n    dispatch(characteristicControllers.get());\r\n    dispatch(characteristicControllers.getWithValues());\r\n  }, [dispatch]);\r\n\r\n  React.useEffect(() => {\r\n    if (!pending || !dataWithValue.length || loaded) return;\r\n    let ok = false;\r\n    for (let i = 0; i < dataWithValue.length; i++) {\r\n      for (let j = 0; j < dataWithValue[i].values.length; j++) {\r\n        if (dataWithValue[i].values[j].id === id) {\r\n          setName(dataWithValue[i].values[j].value);\r\n          setSelectedCharacteristic({\r\n            id: dataWithValue[i].id,\r\n            name: dataWithValue[i].name,\r\n          });\r\n          ok = true;\r\n          setLoaded(true);\r\n          return;\r\n        }\r\n      }\r\n    }\r\n    if (!ok) history.push(ErrorPaths.notFound);\r\n  }, [id, dataWithValue, pending, loaded]);\r\n\r\n  return (\r\n    <Page title=\"Изменить значение характеристики\">\r\n      <MainLayout>\r\n        <div className=\"add-characteristics\">\r\n          <h1 className=\"title mb-3\">Изменить значение характеристики</h1>\r\n          <DropdownMenu\r\n            id=\"1\"\r\n            className=\"mb-3\"\r\n            value={selectedCharacteristic?.name || \"\"}\r\n            list={dataWithValue}\r\n            onSelect={(n: string, i?: string) => {\r\n              setSelectedCharacteristic({ name: n, id: i ? i : \"\" });\r\n            }}\r\n          />\r\n          <div className=\"deliveryType__add-new mb-3\">\r\n            <div className=\"d-flex gap-20\">\r\n              <div className=\"deliveryType__add-new-label\">\r\n                <p>Название значения</p>\r\n                <input\r\n                  type=\"text\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                  className=\"deliveryType__add-new-input\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <button\r\n              disabled={pending}\r\n              className={classNames(\r\n                \"deliveryType__add-new-btn\",\r\n                pending && \"deliveryType__add-new-btn_pending\"\r\n              )}\r\n              onClick={handleEditValue}\r\n            >\r\n              Изменить\r\n            </button>\r\n            <Link\r\n              to={AppPaths.characteristics}\r\n              className=\"deliveryType__add-new-btn-cancel\"\r\n            >\r\n              Отмена\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </MainLayout>\r\n    </Page>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { DropdownMenu, Page, SubSubcategoriesMenu } from \"@components\";\r\nimport { MainLayout } from \"@layouts\";\r\nimport { ICharacteristicValue, ISelectedCharacteristic } from \"@interfaces\";\r\nimport { useAppDispatch, useAppSelector } from \"@store\";\r\nimport { CharacteristicsDropdown } from \"@components\";\r\nimport {\r\n  brandControllers,\r\n  categoryControllers,\r\n  characteristicControllers,\r\n  productControllers,\r\n} from \"@controllers\";\r\nimport { DeleteIcon } from \"@icons\";\r\nimport { addProductValidation } from \"@validations\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\nimport { BaseUrlWithoutApi } from '@utils/BaseUrl';\r\n\r\ninterface IFile {\r\n  id: string;\r\n  file: File | null;\r\n  image: string;\r\n}\r\n\r\nexport const EditProduct: React.FC = (): JSX.Element => {\r\n  const { id } = useParams();\r\n  const dispatch = useAppDispatch();\r\n\r\n  const { pending, dataById } = useAppSelector((state) => state.product);\r\n  const categories = useAppSelector((state) => state.category);\r\n  const brands = useAppSelector((state) => state.brand);\r\n  const characteristics = useAppSelector((state) => state.characteristic);\r\n\r\n  const [errorText, setErrorText] = React.useState<string | null>(\"\");\r\n  const [name, setName] = React.useState<string>(\"\");\r\n  const [price, setPrice] = React.useState<string>(\"0\");\r\n  const [discount, setDiscount] = React.useState<string>(\"0\");\r\n  const [vendorcode, setVendorcode] = React.useState<string>(\"\");\r\n  const [description, setDescription] = React.useState<string>(\"\");\r\n  const [categoryId, setCategoryId] = React.useState<string | null>(null);\r\n  const [brand, setBrand] = React.useState<{ id: string; name: string } | null>(\r\n    null\r\n  );\r\n  const [characteristicsValues, setCharacteristicsValues] = React.useState<\r\n    ISelectedCharacteristic[]\r\n  >([]);\r\n  const [mainImage, setMainImage] = React.useState<IFile | null>(null);\r\n  const [imageList, setImageList] = React.useState<IFile[]>([]);\r\n\r\n  const handleCompareImages: any = React.useCallback(() => {\r\n    if (!mainImage || !dataById) return;\r\n    const deletedImagesId: string[] = [];\r\n    const newImages: File[] = [];\r\n    let newMainImage: File | null = null;\r\n\r\n    dataById.images.forEach((image) => {\r\n      if (!imageList.find((img) => img.id === image.id) && !image.isMain) {\r\n        deletedImagesId.push(image.id);\r\n      }\r\n      if (image.isMain && image.id !== mainImage.id) {\r\n        newMainImage = mainImage.file;\r\n        deletedImagesId.push(image.id);\r\n      }\r\n    });\r\n\r\n    imageList.forEach((image) => {\r\n      if (!dataById.images.find((img) => img.id === image.id)) {\r\n        newImages.push(image.file as File);\r\n      }\r\n    });\r\n\r\n    return {\r\n      deletedImagesId,\r\n      newImages,\r\n      newMainImage,\r\n    };\r\n  }, [dataById, imageList, mainImage]);\r\n\r\n  const handleCompareCharacteristics: any = React.useCallback(() => {\r\n    if (!dataById) return;\r\n    const deletedCharacteristics: string[] = [];\r\n    const newCharacteristicsValueId: string[] = [];\r\n\r\n    dataById.characteristics.forEach((characteristic) => {\r\n      if (!characteristicsValues.find((ch) => ch.id === characteristic.id)) {\r\n        deletedCharacteristics.push(characteristic.id);\r\n      }\r\n    })\r\n\r\n    characteristicsValues.forEach((characteristic) => {\r\n      if (\r\n        !dataById.characteristics.find((ch) => ch.id === characteristic.id) \r\n          && \r\n        characteristic.value.value.trim() !== \"\"\r\n      ) {\r\n        newCharacteristicsValueId.push(characteristic.value.id);\r\n      }\r\n    })\r\n\r\n    return {\r\n      deletedCharacteristics,\r\n      newCharacteristicsValueId,\r\n    }\r\n  }, [dataById, characteristicsValues]);\r\n\r\n  const handleAddProduct = React.useCallback(() => {\r\n    const validationResult = addProductValidation({\r\n      name,\r\n      price,\r\n      vendorcode,\r\n      categoryId,\r\n      mainImage: mainImage?.image || null,\r\n    });\r\n\r\n    setErrorText(validationResult.errorText || null);\r\n    if (!validationResult.isValid || !id) return;\r\n\r\n    const { deletedImagesId, newImages, newMainImage } = handleCompareImages();\r\n\r\n    const { deletedCharacteristics, newCharacteristicsValueId } = handleCompareCharacteristics();\r\n\r\n    const formData = new FormData();\r\n    formData.append('Name', name);\r\n    formData.append('Price', String(price));\r\n    formData.append('Discount', String(discount));\r\n    formData.append('Vendorcode', vendorcode);\r\n    formData.append('Description', description);\r\n    formData.append('CategoryId', categoryId || \"\");\r\n    formData.append('BrandId', brand?.id || \"\");\r\n    if (newMainImage)\r\n      formData.append('MainImage', mainImage?.file || \"\");\r\n    if (newImages.length)\r\n      newImages.forEach((image: File) => {\r\n        formData.append('Images', image);\r\n      })\r\n    if (deletedImagesId.length)\r\n      deletedImagesId.forEach((image: File) => {\r\n        formData.append('DeleteImageIds', image);\r\n      })\r\n    if (newCharacteristicsValueId.length)\r\n      newCharacteristicsValueId.forEach((chValueId: string) => {\r\n        formData.append('CharacteristicValueId', chValueId);\r\n      })\r\n    if (deletedCharacteristics.length)\r\n      deletedCharacteristics.forEach((chId: string) => {\r\n        formData.append('DeleteCharacteristicValueIds', chId);\r\n      })\r\n\r\n    dispatch(productControllers.edit(formData, id));\r\n  }, [name, price, vendorcode, categoryId, mainImage?.image, mainImage?.file, id, handleCompareImages, handleCompareCharacteristics, discount, description, brand?.id, dispatch]);\r\n\r\n  const handleSelectMainImg = React.useCallback((files: FileList | null) => {\r\n    if (!files) return;\r\n    setMainImage({\r\n      id: String(new Date().valueOf()),\r\n      file: files[0],\r\n      image: URL.createObjectURL(files[0]),\r\n    });\r\n  }, []);\r\n\r\n  const handleAddImage = React.useCallback((files: FileList | null) => {\r\n    if (!files) return;\r\n    setImageList((prev) => [\r\n      ...prev,\r\n      {\r\n        file: files[0],\r\n        id: String(new Date().valueOf()),\r\n        image: URL.createObjectURL(files[0]),\r\n      },\r\n    ]);\r\n  }, []);\r\n\r\n  const handleRemoveImage = React.useCallback((id: string) => {\r\n    setImageList((prev) => prev.filter((item) => item.id !== id));\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    dispatch(categoryControllers.get());\r\n  }, [dispatch]);\r\n\r\n  React.useEffect(() => {\r\n    dispatch(brandControllers.get());\r\n  }, [dispatch]);\r\n\r\n  React.useEffect(() => {\r\n    dispatch(characteristicControllers.getWithValues());\r\n  }, [dispatch]);\r\n\r\n  React.useEffect(() => {\r\n    if (!id) return;\r\n    dispatch(productControllers.getById(id));\r\n  }, [id, dispatch]);\r\n\r\n  React.useEffect(() => {\r\n    if (!dataById) return;\r\n    setName(dataById.name);\r\n    setPrice(dataById.price);\r\n    setDescription(dataById.description);\r\n    setVendorcode(dataById.vendorCode);\r\n    setBrand({\r\n      id: dataById.brandId,\r\n      name:\r\n        brands.data.find((item) => item.id === dataById.brandId)?.name || \"\",\r\n    });\r\n    setCategoryId(dataById.categoryId);\r\n    setDiscount(dataById.discount);\r\n    setCharacteristicsValues(\r\n      dataById.characteristics.map((item) => ({\r\n        id: item.id,\r\n        characteristic: {\r\n          id:\r\n            characteristics.dataWithValue.find(\r\n              (characteristic) => characteristic.name === item.name\r\n            )?.id || \"\",\r\n          name: item.name,\r\n        },\r\n        value: {\r\n          id:\r\n            characteristics.dataWithValue\r\n              .find((characteristic) => characteristic.name === item.name)\r\n              ?.values.find(\r\n                (value: Omit<ICharacteristicValue, \"characteristicId\">) =>\r\n                  value.value === item.value\r\n              )?.id || \"\",\r\n          value: item.value,\r\n        },\r\n      }))\r\n    );\r\n\r\n    setImageList(\r\n      dataById.images\r\n        ?.filter((item) => !item.isMain)\r\n        ?.map((item) => ({\r\n          id: item.id,\r\n          image: BaseUrlWithoutApi + item.imagePath,\r\n          file: null,\r\n        }))\r\n    );\r\n\r\n    const payloadMainImage = dataById.images?.find((item) => item.isMain);\r\n    if (payloadMainImage)\r\n      setMainImage({\r\n        id: payloadMainImage.id,\r\n        image: BaseUrlWithoutApi + payloadMainImage.imagePath,\r\n        file: null,\r\n      });\r\n  }, [dataById, characteristics, brands.data]);\r\n\r\n  return (\r\n    <Page title=\"Изменить продукт\">\r\n      <MainLayout>\r\n        <h1 className=\"title mb-3\">Изменить продукт</h1>\r\n\r\n        <div className=\"form characteristics-form\">\r\n          <div className=\"form__label\">\r\n            <div className=\"form__label-name\">\r\n              Главная картинка\r\n              <span className=\"exact_star\">*</span>\r\n            </div>\r\n            {mainImage && (\r\n              <div className=\"banner__container mt-1\">\r\n                <div className=\"banner__image\">\r\n                  <img\r\n                    className=\"img\"\r\n                    src={mainImage.image}\r\n                    alt=\"Выбранное изображение\"\r\n                  />\r\n                </div>\r\n                <div className=\"banner__tools\">\r\n                  <button\r\n                    className=\"banner__btn banner__delete-btn\"\r\n                    onClick={() => setMainImage(null)}\r\n                  >\r\n                    <DeleteIcon size={24} />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n            {!mainImage && (\r\n              <label className=\"add-btn add-btn_sm\">\r\n                <input\r\n                  id=\"inputfile\"\r\n                  className=\"d-none\"\r\n                  type=\"file\"\r\n                  onChange={(e) => handleSelectMainImg(e.target.files)}\r\n                />\r\n                Выбрать главную фотографию\r\n              </label>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"form__label\">\r\n            <div className=\"form__label-name\">Дополнительные фотографии</div>\r\n\r\n            <div className=\"d-flex direction-column gap-20 mt-1 mb-1\">\r\n              {imageList.map((item) => (\r\n                <div className=\"banner__container mt-1\" key={item.id}>\r\n                  <div className=\"banner__image \">\r\n                    <img\r\n                      className=\"img\"\r\n                      src={item.image}\r\n                      alt=\"Выбранное изображение\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"banner__tools\">\r\n                    <button\r\n                      className=\"banner__btn banner__delete-btn\"\r\n                      onClick={() => handleRemoveImage(item.id)}\r\n                    >\r\n                      <DeleteIcon size={24} />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            <label className=\"add-btn add-btn_sm\">\r\n              <input\r\n                id=\"inputfile\"\r\n                className=\"d-none\"\r\n                type=\"file\"\r\n                onChange={(e) => handleAddImage(e.target.files)}\r\n              />\r\n              Добавить фотографию\r\n            </label>\r\n          </div>\r\n\r\n          <div className=\"form__label\">\r\n            <div className=\"form__label-name\">\r\n              Название\r\n              <span className=\"exact_star\">*</span>\r\n            </div>\r\n\r\n            <div className=\"form__label-input\">\r\n              <input\r\n                type=\"text\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form__label\">\r\n            <div className=\"form__label-name\">\r\n              Цена\r\n              <span className=\"exact_star\">*</span>\r\n            </div>\r\n\r\n            <div className=\"form__label-input\">\r\n              <input\r\n                type=\"text\"\r\n                value={price}\r\n                onFocus={(e) => e.target.select()}\r\n                onChange={(e) => {\r\n                  const value = e.target.value\r\n                  if (!isNaN(Number(value)))\r\n                    setPrice(e.target.value);\r\n                }}\r\n              />\r\n              <div className=\"form__label-input-type\">c.</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form__label\">\r\n            <div className=\"form__label-name\">Акция</div>\r\n\r\n            <div className=\"form__label-input\">\r\n              <input\r\n                type=\"text\"\r\n                value={discount}\r\n                onFocus={(e) => e.target.select()}\r\n                onChange={(e) => {\r\n                  const value = e.target.value\r\n                  if (!isNaN(Number(value)))\r\n                    setDiscount(e.target.value);\r\n                }}\r\n              />\r\n              <div className=\"form__label-input-type\">%</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form__label\">\r\n            <div className=\"form__label-name\">\r\n              Vendor Code\r\n              <span className=\"exact_star\">*</span>\r\n            </div>\r\n\r\n            <div className=\"form__label-input\">\r\n              <input\r\n                type=\"text\"\r\n                value={vendorcode}\r\n                onChange={(e) => setVendorcode(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form__label\">\r\n            <div className=\"form__label-name\">\r\n              Категория\r\n              <span className=\"exact_star\">*</span>\r\n            </div>\r\n            <SubSubcategoriesMenu\r\n              id=\"categoryId\"\r\n              selectedId={categoryId}\r\n              onSelect={(id) => setCategoryId(id)}\r\n              list={categories.data}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form__label\">\r\n            <div className=\"form__label-name\">Бренд</div>\r\n            <DropdownMenu\r\n              id=\"categoryId\"\r\n              value={brand?.name || \"\"}\r\n              onSelect={(name, id?) => setBrand({ id: id || \"\", name })}\r\n              list={brands.data}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form__label\">\r\n            <div className=\"form__label-name mb-1\">Характеристки</div>\r\n            <CharacteristicsDropdown\r\n              characteristicsValues={characteristicsValues}\r\n              setCharacteristicsValues={setCharacteristicsValues}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form__label\">\r\n            <div className=\"form__label-name\">Описание</div>\r\n\r\n            <div className=\"form__label-input form__label-textarea\">\r\n              <textarea\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <button\r\n            disabled={pending}\r\n            className={classNames(\r\n              \"deliveryType__add-new-btn\",\r\n              pending && \"deliveryType__add-new-btn_pending\"\r\n            )}\r\n            onClick={handleAddProduct}\r\n          >\r\n            Изменить продукт\r\n          </button>\r\n\r\n          {errorText && <div className=\"error-text mt-1\">{errorText}</div>}\r\n        </div>\r\n      </MainLayout>\r\n    </Page>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link, Page } from \"@components\";\r\nimport { MainLayout } from \"@layouts\";\r\nimport { useAppDispatch, useAppSelector } from \"@store\";\r\nimport { paymentTypesControllers } from \"@controllers\";\r\nimport { AppPaths } from \"@constants\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { BaseUrlWithoutApi } from \"@utils/BaseUrl\";\r\nimport classNames from \"classnames\";\r\n\r\nexport const EditPaymentType: React.FC = (): JSX.Element => {\r\n  const dispatch = useAppDispatch();\r\n  const { dataById, pending } = useAppSelector((state) => state.paymentTypes);\r\n  const { id } = useParams();\r\n\r\n  const [name, setName] = React.useState<string>(\"\");\r\n  const [description, setDescription] = React.useState<string>(\"\");\r\n  const [file, setFile] = React.useState<File | null>(null);\r\n  const [imagePath, setImagePath] = React.useState<string>(\"\");\r\n\r\n  const handleSelectImg = React.useCallback((files: FileList | null) => {\r\n    if (!files) return;\r\n    setFile(files[0]);\r\n    setImagePath(URL.createObjectURL(files[0]));\r\n  }, []);\r\n\r\n  const handleEditPaymentType = React.useCallback(() => {\r\n    if (!id) return;\r\n    const formData = new FormData();\r\n    if (file) formData.append(\"image\", file || \"\");\r\n    formData.append(\"name\", name);\r\n    formData.append(\"description\", description);\r\n    dispatch(paymentTypesControllers.edit(formData, id));\r\n  }, [file, name, description, id, dispatch]);\r\n\r\n  React.useEffect(() => {\r\n    if (!id) return;\r\n    dispatch(paymentTypesControllers.getById(id));\r\n  }, [id, dispatch]);\r\n\r\n  React.useEffect(() => {\r\n    if (!dataById) return;\r\n    setName(dataById?.name || \"\");\r\n    setDescription(dataById?.description || \"\");\r\n    setImagePath(BaseUrlWithoutApi + dataById?.imagePath || \"\");\r\n  }, [dataById]);\r\n\r\n  return (\r\n    <Page title=\"Изменить способ оплаты\">\r\n      <MainLayout>\r\n        <div className=\"add-characteristics\">\r\n          <h1 className=\"title mb-3\">Изменить способ оплаты</h1>\r\n          <div className=\"deliveryType__add-new mb-3\">\r\n            <div className=\"d-flex direction-column gap-20\">\r\n              <div className=\"deliveryType__add-new-label\">\r\n                <label className=\"add-btn\">\r\n                  <input\r\n                    id=\"inputfile\"\r\n                    onChange={(e) => handleSelectImg(e.target.files)}\r\n                    type=\"file\"\r\n                    className=\"d-none\"\r\n                  />\r\n                  Выбрать фотографию\r\n                </label>\r\n              </div>\r\n              {file && (\r\n                <div className=\"margin-center deliveryType__add-new-label banner__image banner__image_sm\">\r\n                  <img\r\n                    className=\"img\"\r\n                    src={imagePath}\r\n                    alt=\"Выбранное изображение\"\r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"deliveryType__add-new-label\">\r\n                <p>Название</p>\r\n                <input\r\n                  type=\"text\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                  className=\"deliveryType__add-new-input\"\r\n                />\r\n              </div>\r\n              <div className=\"deliveryType__add-new-label\">\r\n                <p>Описание</p>\r\n                <input\r\n                  type=\"text\"\r\n                  value={description}\r\n                  onChange={(e) => setDescription(e.target.value)}\r\n                  className=\"deliveryType__add-new-input\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <button\r\n              disabled={pending}\r\n              className={classNames(\r\n                \"deliveryType__add-new-btn\",\r\n                pending && \"deliveryType__add-new-btn_pending\"\r\n              )}\r\n              onClick={handleEditPaymentType}\r\n            >\r\n              Изменить\r\n            </button>\r\n            <Link\r\n              to={AppPaths.paymentTypes}\r\n              className=\"deliveryType__add-new-btn-cancel\"\r\n            >\r\n              Отмена\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </MainLayout>\r\n    </Page>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Page } from \"@components\";\r\nimport { MainLayout } from \"@layouts\";\r\nimport { BaseUrl } from \"@utils/BaseUrl\";\r\nimport { LSTokenName } from \"@utils/LocaStorage\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport const Info: React.FC = (): JSX.Element => {\r\n  const [email, setEmail] = React.useState<string>(\"\");\r\n  const [phone, setPhone] = React.useState<string>(\"\");\r\n  const [about, setAbout] = React.useState<string>(\"\");\r\n  const [instagram, setInstagram] = React.useState<string>(\"\");\r\n  const [facebook, setFacebook] = React.useState<string>(\"\");\r\n  const [telegram, setTelegram] = React.useState<string>(\"\");\r\n\r\n  const handleSave = React.useCallback(() => {\r\n    fetch(BaseUrl + \"/contacts\", {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization:\r\n          \"Bearer \" + JSON.parse(localStorage.getItem(LSTokenName) || \"\"),\r\n      },\r\n      body: JSON.stringify({\r\n        email,\r\n        phone,\r\n        about,\r\n        instagram,\r\n        facebook,\r\n        telegram,\r\n      }),\r\n    })\r\n      .then((res) => {\r\n        toast.success(\"Данные успешно обновлены\");\r\n      })\r\n      .catch((err) => {\r\n        toast.error(\"Ошибка обновления данных\");\r\n      });\r\n  }, [about, email, facebook, instagram, phone, telegram]);\r\n\r\n  React.useEffect(() => {\r\n    fetch(BaseUrl + \"/contacts\", { method: \"GET\" })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setEmail(data.email);\r\n        setPhone(data.phone);\r\n        setAbout(data.about);\r\n        setInstagram(data.instagram);\r\n        setFacebook(data.facebook);\r\n        setTelegram(data.telegram);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Page title=\"Контакты\">\r\n      <MainLayout>\r\n        <h1 className=\"title mb-3\">Контакты</h1>\r\n        <div className=\"form characteristics-form\">\r\n          <p className=\"info-p\">\r\n            Email:\r\n            <input\r\n              type=\"text\"\r\n              className=\"info-input\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </p>\r\n          <p className=\"info-p\">\r\n            Telegram:\r\n            <input\r\n              type=\"text\"\r\n              className=\"info-input\"\r\n              value={telegram}\r\n              onChange={(e) => setTelegram(e.target.value)}\r\n            />\r\n          </p>\r\n          <p className=\"info-p\">\r\n            Instagram:\r\n            <input\r\n              type=\"text\"\r\n              className=\"info-input\"\r\n              value={instagram}\r\n              onChange={(e) => setInstagram(e.target.value)}\r\n            />\r\n          </p>\r\n          <p className=\"info-p\">\r\n            Phone:\r\n            <input\r\n              type=\"text\"\r\n              className=\"info-input\"\r\n              value={phone}\r\n              onChange={(e) => setPhone(e.target.value)}\r\n            />\r\n          </p>\r\n          <p className=\"info-p\">\r\n            Facebook:\r\n            <input\r\n              type=\"text\"\r\n              className=\"info-input\"\r\n              value={facebook}\r\n              onChange={(e) => setFacebook(e.target.value)}\r\n            />\r\n          </p>\r\n          <p className=\"info-p\">\r\n            About:\r\n            <textarea\r\n              className=\"info-text\"\r\n              value={about}\r\n              onChange={(e) => setAbout(e.target.value)}\r\n            />\r\n          </p>\r\n          <button onClick={handleSave}>Сохранить</button>\r\n        </div>\r\n      </MainLayout>\r\n    </Page>\r\n  );\r\n};\r\n"],"names":["initialErrors","email","password","Login","dispatch","useAppDispatch","React","setEmail","setPassword","errors","setErrors","title","className","value","onChange","e","target","type","placeholder","onClick","trim","length","authorizeUserOld","code","CheckCode","setCode","checkAuthCode","MainLayout","props","freezed","useAppSelector","state","app","token","user","history","AuthPaths","localStorage","removeItem","LSTokenName","disabled","children","ForgotPassword","NotFound","ServerError","ConnectionError","InDeveloping","bannerControllers","Object","freeze","seal","get","actions","bannerServices","response","banners","data","message","setTimeout","create","banner","status","AppPaths","delete","id","brandControllers","brandServices","brands","brand","categoryControllers","categoryServices","categorys","category","edit","getPopular","deliveryTypeControllers","deliveryTypeServices","deliveryTypes","getById","deliveryType","characteristicControllers","characteristicServices","characteristics","getWithValues","getValues","characteristic","createValue","characteristicValue","editValue","deleteValue","productControllers","params","payload","categoryId","statuses","totalPages","pageCount","newStatuses","loaded","setStatuses","productServices","product","paymentTypesControllers","paymentTypeServices","paymentTypes","paymentType","ordersControllers","ordersServices","orders","orderStatusId","orderId","usersControllers","usersServices","pageSize","pageNumber","page","query","users","roleId","Banners","pending","handleRemoveBanner","to","map","item","index","draggable","href","rel","src","BaseUrlWithoutApi","imagePath","alt","width","height","size","Brands","name","list","classNames","activeId","Paths","onHover","onSetActive","showMore","setShowMore","slice","subsubcat","subCategories","Categories","setActiveId","i","find","CharacteristicsSkeleton","radius","DeliveryTypesSkeleton","ProductsSkeleton","DeliveryType","price","initialParams","Users","setParams","roleName","navigate","useNavigate","handleSetParams","prev","handleChangeRole","QueryToString","urlParams","QueryToObject","Number","v","firstName","lastName","Dropdown","onPageChange","p","open","setOpen","handleClickOutside","closest","window","addEventListener","removeEventListener","UserById","useParams","dataById","address","phone","Characteristic","menu","menuHeight","setMenuHeight","handleDeleteCharacteristic","handleDeleteValue","current","clientHeight","values","style","ref","Characteristics","dataWithValue","ProductsFilter","useState","categoriesState","setCategoriesState","checkedId","setCheckedId","categoryStatuses","setCategoryStatuses","getCategories","axios","process","categories","forEach","useEffect","handleItemClick","getAttribute","backgroundColor","color","BaseUrl","Products","shallowEqual","paginationPending","handleDeleteProduct","justifyContent","isNew","discount","imgSrc","images","isHidden","hideProduct","date","productDate","onDelete","PaymentTypes","handleRemovePaymentType","description","Orders","handleApprove","handleReject","phoneNumber","indexOf","replaceAll","deliveryTypeId","paymentTypeId","Date","orderAt","toLocaleDateString","reduce","acc","cur","count","Order","orderById","orderStatus","vendorCode","addProductValidation","mainImage","errorText","isValid","vendorcode","AddProduct","setErrorText","setName","setPrice","setDiscount","setVendorcode","setDescription","setCategoryId","setBrand","characteristicsValues","setCharacteristicsValues","setMainImage","imageList","setImageList","handleAddProduct","validationResult","formData","FormData","append","String","image","file","filter","handleSelectMainImg","files","handleAddImage","valueOf","handleRemoveImage","URL","createObjectURL","onFocus","select","isNaN","replace","selectedId","onSelect","AddCharacteristics","handleCreateCharacteristic","AddCharacteristicValue","handleCreateCharacteristicValue","characteristicId","AddBrand","setFile","handleSelectImg","handleCreateBrand","AddDeliveryType","handleChangePrice","handleCreateDeliveryType","AddCategory","subcategoryId","setSubCategoryId","popular","setPopular","wrapData","setWrapData","icon","setIcon","setImage","handleSelectIcon","handleSelectImage","handleAddCategory","checked","onToggle","AddBanner","setSrc","handleCreateBanner","fd","AddPaymentType","handleCreatePaymentType","EditCharacteristic","handleEditCharacteristic","ErrorPaths","EditDeliveryType","deliveyTypeById","handleEditDeliveryType","EditCategory","popularData","canDelete","setCanDelete","currentCategoryId","setCurrentCategoryId","iconPath","setIconPath","setImagePath","handleEditCategory","handleRemoveCategory","ok","initCategory","parentId","j","k","currentId","EditCharacteristicValue","setLoaded","selectedCharacteristic","setSelectedCharacteristic","handleEditValue","n","EditProduct","handleCompareImages","deletedImagesId","newImages","newMainImage","img","isMain","push","handleCompareCharacteristics","deletedCharacteristics","newCharacteristicsValueId","ch","chValueId","chId","brandId","payloadMainImage","EditPaymentType","handleEditPaymentType","Info","setPhone","about","setAbout","instagram","setInstagram","facebook","setFacebook","telegram","setTelegram","handleSave","fetch","method","headers","Authorization","JSON","parse","getItem","body","stringify","then","res","toast","catch","err","json"],"sourceRoot":""}